fm = get_instance();
a = fm:create_operator_of_type("a", "CacheIn");
a:set_parameter("list_iris", "http://www.anothertest.de ");
a:set_parameter("connector_socket_address", "localhost");
a:set_parameter("connector_socket_port", "9595");
b = fm:create_operator_of_type("b", "SPARQL");
b:set_parameter("query_type", "SELECT");
b:set_parameter("variable_0", "x");
b:set_parameter("uri", "foo");
b:set_parameter("uri_attribute", "blubber");
b:set_parameter("target", "target");
fm:connect_operators(b, "out", a, "in");
c = fm:create_operator_of_type("c", "OperatorTag");
c:set_parameter("owl_class", "<http://vs.cs.hs-rm.de/cim-meta.owl#CIM_Composition>");
c:set_parameter("element", "anotherElement");
fm:connect_operators(c, "out", b, "in");
d = fm:create_operator_of_type("d", "SWRL");
d:set_parameter("antecedent_object_property", "<http://vs.cs.hs-rm.de/cim-meta.owl#CIM_Association__Ref>");
d:set_parameter("antecedent_stream", "c");
d:set_parameter("antecedent_element", "anotherElement");
d:set_parameter("antecedent_stream", "c");
d:set_parameter("antecedent_element", "element");
d:set_parameter("antecedent_object_property", "<http://vs.cs.hs-rm.de/cim-meta.owl#CIM_Association__Role>");
d:set_parameter("antecedent_stream", "c");
d:set_parameter("antecedent_element", "element");
d:set_parameter("consequent_object_property", "<http://vs.cs.hs-rm.de/cim-meta.owl#CIM_Aggregation__Parent>");
d:set_parameter("consequent_stream", "c");
d:set_parameter("consequent_element", "anotherElement");
fm:connect_operators(d, "out", c, "in");
e = fm:create_operator_of_type("e", "UnTag");
e:set_parameter("ontology_element", "<http://vs.cs.hs-rm.de/cim-meta.owl#CIM_Array>");
e:set_parameter("variable", "element");
fm:connect_operators(e, "out", d, "in");
f = fm:create_operator_of_type("f", "DecisionTree");
f:set_parameter("attributes", "PERSON = {IN,OUT}LIGHTOUT = {YES,NO}LIGHTIN = {YES,NO}TEMPERATURE = {NORMAL,HIGH,LOW}TV = {ON,OFF}WINDOW = {OPEN,CLOSED}");
f:set_parameter("classAttribute", "ZALUZIE = {YES,NO}");
f:set_parameter("delta", "0.0001");
f:set_parameter("classHomogenityBarrier", "0.98");
f:set_parameter("checkFrequency", "450");
f:set_parameter("tau", "0.025");
fm:connect_operators(f, "out", e, "in");
fm:start(f);
fm:start(d);
fm:start(e);
fm:start(b);
fm:start(c);
fm:start(a);
fm:stop(f);
fm:stop(d);
fm:stop(e);
fm:stop(b);
fm:stop(c);
fm:stop(a);
