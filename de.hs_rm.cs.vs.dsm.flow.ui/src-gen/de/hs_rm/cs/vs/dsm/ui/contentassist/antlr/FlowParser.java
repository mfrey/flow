/*
* generated by Xtext
*/
package de.hs_rm.cs.vs.dsm.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import de.hs_rm.cs.vs.dsm.services.FlowGrammarAccess;

public class FlowParser extends AbstractContentAssistParser {
	
	@Inject
	private FlowGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected de.hs_rm.cs.vs.dsm.ui.contentassist.antlr.internal.InternalFlowParser createParser() {
		de.hs_rm.cs.vs.dsm.ui.contentassist.antlr.internal.InternalFlowParser result = new de.hs_rm.cs.vs.dsm.ui.contentassist.antlr.internal.InternalFlowParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getModelElementAccess().getAlternatives(), "rule__ModelElement__Alternatives");
					put(grammarAccess.getElementJoinOperatorAccess().getAlternatives_2(), "rule__ElementJoinOperator__Alternatives_2");
					put(grammarAccess.getReturnTypeOperatorAccess().getAlternatives(), "rule__ReturnTypeOperator__Alternatives");
					put(grammarAccess.getTagElementAccess().getAlternatives(), "rule__TagElement__Alternatives");
					put(grammarAccess.getBarrierOperatorAccess().getAlternatives(), "rule__BarrierOperator__Alternatives");
					put(grammarAccess.getWindowOperatorAccess().getAlternatives(), "rule__WindowOperator__Alternatives");
					put(grammarAccess.getWindowOperatorAccess().getUnitAlternatives_0_2_0(), "rule__WindowOperator__UnitAlternatives_0_2_0");
					put(grammarAccess.getAdditionOperatorAccess().getAlternatives_4(), "rule__AdditionOperator__Alternatives_4");
					put(grammarAccess.getSubtractionOperatorAccess().getAlternatives_4(), "rule__SubtractionOperator__Alternatives_4");
					put(grammarAccess.getMultiplicationOperatorAccess().getAlternatives_4(), "rule__MultiplicationOperator__Alternatives_4");
					put(grammarAccess.getDivisionOperatorAccess().getAlternatives_4(), "rule__DivisionOperator__Alternatives_4");
					put(grammarAccess.getModuloOperatorAccess().getAlternatives_4(), "rule__ModuloOperator__Alternatives_4");
					put(grammarAccess.getVariableDefinitionAccess().getAlternatives(), "rule__VariableDefinition__Alternatives");
					put(grammarAccess.getStreamElementAccess().getAlternatives(), "rule__StreamElement__Alternatives");
					put(grammarAccess.getRelationalExpressionAccess().getOperatorAlternatives_1_1_0(), "rule__RelationalExpression__OperatorAlternatives_1_1_0");
					put(grammarAccess.getAdditionAccess().getAlternatives_1_0(), "rule__Addition__Alternatives_1_0");
					put(grammarAccess.getMultiplicationAccess().getAlternatives_1_0(), "rule__Multiplication__Alternatives_1_0");
					put(grammarAccess.getPrimaryExpressionAccess().getAlternatives(), "rule__PrimaryExpression__Alternatives");
					put(grammarAccess.getDataTypeAccess().getAlternatives(), "rule__DataType__Alternatives");
					put(grammarAccess.getSimpleDataTypeAccess().getAlternatives(), "rule__SimpleDataType__Alternatives");
					put(grammarAccess.getSparqlQueryTypeAccess().getAlternatives(), "rule__SparqlQueryType__Alternatives");
					put(grammarAccess.getPackageDeclarationAccess().getGroup(), "rule__PackageDeclaration__Group__0");
					put(grammarAccess.getImportAccess().getGroup(), "rule__Import__Group__0");
					put(grammarAccess.getStreamStatementAccess().getGroup(), "rule__StreamStatement__Group__0");
					put(grammarAccess.getStreamStatementAccess().getGroup_1(), "rule__StreamStatement__Group_1__0");
					put(grammarAccess.getStreamVariableStatementAccess().getGroup(), "rule__StreamVariableStatement__Group__0");
					put(grammarAccess.getStreamAccessAccess().getGroup(), "rule__StreamAccess__Group__0");
					put(grammarAccess.getStreamDeclarationAccessAccess().getGroup(), "rule__StreamDeclarationAccess__Group__0");
					put(grammarAccess.getStreamDefinitionAccess().getGroup(), "rule__StreamDefinition__Group__0");
					put(grammarAccess.getJoinOperatorAccess().getGroup(), "rule__JoinOperator__Group__0");
					put(grammarAccess.getJoinOperatorAccess().getGroup_5(), "rule__JoinOperator__Group_5__0");
					put(grammarAccess.getStreamOperatorParameterAccess().getGroup(), "rule__StreamOperatorParameter__Group__0");
					put(grammarAccess.getStreamOperatorParameterAccess().getGroup_1(), "rule__StreamOperatorParameter__Group_1__0");
					put(grammarAccess.getElementJoinOperatorAccess().getGroup(), "rule__ElementJoinOperator__Group__0");
					put(grammarAccess.getElementJoinOperatorAccess().getGroup_3(), "rule__ElementJoinOperator__Group_3__0");
					put(grammarAccess.getElementJoinOperatorAccess().getGroup_4(), "rule__ElementJoinOperator__Group_4__0");
					put(grammarAccess.getFilterOperatorAccess().getGroup(), "rule__FilterOperator__Group__0");
					put(grammarAccess.getFilterOperatorAccess().getGroup_3(), "rule__FilterOperator__Group_3__0");
					put(grammarAccess.getSplitOperatorAccess().getGroup(), "rule__SplitOperator__Group__0");
					put(grammarAccess.getLogOperatorAccess().getGroup(), "rule__LogOperator__Group__0");
					put(grammarAccess.getRandomOperatorAccess().getGroup(), "rule__RandomOperator__Group__0");
					put(grammarAccess.getDecisionTreeOperatorAccess().getGroup(), "rule__DecisionTreeOperator__Group__0");
					put(grammarAccess.getDecisionTreeOperatorAccess().getGroup_4(), "rule__DecisionTreeOperator__Group_4__0");
					put(grammarAccess.getDecisionTreeOperatorAccess().getGroup_14(), "rule__DecisionTreeOperator__Group_14__0");
					put(grammarAccess.getDecisionTreeAttributeAccess().getGroup(), "rule__DecisionTreeAttribute__Group__0");
					put(grammarAccess.getDecisionTreeAttributeAccess().getGroup_3(), "rule__DecisionTreeAttribute__Group_3__0");
					put(grammarAccess.getMatchOperatorAccess().getGroup(), "rule__MatchOperator__Group__0");
					put(grammarAccess.getMatchOperatorAccess().getGroup_7(), "rule__MatchOperator__Group_7__0");
					put(grammarAccess.getInputOperatorAccess().getGroup(), "rule__InputOperator__Group__0");
					put(grammarAccess.getInputOperatorAccess().getGroup_3(), "rule__InputOperator__Group_3__0");
					put(grammarAccess.getTagOperatorAccess().getGroup(), "rule__TagOperator__Group__0");
					put(grammarAccess.getTagOperatorAccess().getGroup_3(), "rule__TagOperator__Group_3__0");
					put(grammarAccess.getSPARQLOperatorAccess().getGroup(), "rule__SPARQLOperator__Group__0");
					put(grammarAccess.getQueryTagOperatorAccess().getGroup(), "rule__QueryTagOperator__Group__0");
					put(grammarAccess.getSparqlQueryAccess().getGroup(), "rule__SparqlQuery__Group__0");
					put(grammarAccess.getSparqlQueryVariableAccess().getGroup(), "rule__SparqlQueryVariable__Group__0");
					put(grammarAccess.getSparqlQueryVariableAccess().getGroup_2(), "rule__SparqlQueryVariable__Group_2__0");
					put(grammarAccess.getUnTagOperatorAccess().getGroup(), "rule__UnTagOperator__Group__0");
					put(grammarAccess.getUnTagOperatorAccess().getGroup_3(), "rule__UnTagOperator__Group_3__0");
					put(grammarAccess.getUnTagElementAccess().getGroup(), "rule__UnTagElement__Group__0");
					put(grammarAccess.getTagClassElementAccess().getGroup(), "rule__TagClassElement__Group__0");
					put(grammarAccess.getTagObjectPropertyElementAccess().getGroup(), "rule__TagObjectPropertyElement__Group__0");
					put(grammarAccess.getTagDataTypePropertyElementAccess().getGroup(), "rule__TagDataTypePropertyElement__Group__0");
					put(grammarAccess.getWindowOperatorAccess().getGroup_0(), "rule__WindowOperator__Group_0__0");
					put(grammarAccess.getMarkerOperatorAccess().getGroup(), "rule__MarkerOperator__Group__0");
					put(grammarAccess.getSWRLOperatorAccess().getGroup(), "rule__SWRLOperator__Group__0");
					put(grammarAccess.getSWRLRuleAccess().getGroup(), "rule__SWRLRule__Group__0");
					put(grammarAccess.getSWRLRuleAccess().getGroup_1(), "rule__SWRLRule__Group_1__0");
					put(grammarAccess.getRuleAccess().getGroup(), "rule__Rule__Group__0");
					put(grammarAccess.getRuleAccess().getGroup_4(), "rule__Rule__Group_4__0");
					put(grammarAccess.getCountOperatorAccess().getGroup(), "rule__CountOperator__Group__0");
					put(grammarAccess.getStandardDeviationOperatorAccess().getGroup(), "rule__StandardDeviationOperator__Group__0");
					put(grammarAccess.getAverageOperatorAccess().getGroup(), "rule__AverageOperator__Group__0");
					put(grammarAccess.getAdditionOperatorAccess().getGroup(), "rule__AdditionOperator__Group__0");
					put(grammarAccess.getSubtractionOperatorAccess().getGroup(), "rule__SubtractionOperator__Group__0");
					put(grammarAccess.getMultiplicationOperatorAccess().getGroup(), "rule__MultiplicationOperator__Group__0");
					put(grammarAccess.getDivisionOperatorAccess().getGroup(), "rule__DivisionOperator__Group__0");
					put(grammarAccess.getModuloOperatorAccess().getGroup(), "rule__ModuloOperator__Group__0");
					put(grammarAccess.getOutputOperatorAccess().getGroup(), "rule__OutputOperator__Group__0");
					put(grammarAccess.getOutputOperatorAccess().getGroup_5(), "rule__OutputOperator__Group_5__0");
					put(grammarAccess.getVariableDeclarationAccess().getGroup(), "rule__VariableDeclaration__Group__0");
					put(grammarAccess.getNumberVariableDefinitionAccess().getGroup(), "rule__NumberVariableDefinition__Group__0");
					put(grammarAccess.getStringVariableDefinitionAccess().getGroup(), "rule__StringVariableDefinition__Group__0");
					put(grammarAccess.getBooleanVariableDefinitionAccess().getGroup(), "rule__BooleanVariableDefinition__Group__0");
					put(grammarAccess.getStructureDeclarationAccess().getGroup(), "rule__StructureDeclaration__Group__0");
					put(grammarAccess.getStreamDeclarationAccess().getGroup(), "rule__StreamDeclaration__Group__0");
					put(grammarAccess.getStructureElementsAccess().getGroup(), "rule__StructureElements__Group__0");
					put(grammarAccess.getOrAccess().getGroup(), "rule__Or__Group__0");
					put(grammarAccess.getOrAccess().getGroup_1(), "rule__Or__Group_1__0");
					put(grammarAccess.getAndAccess().getGroup(), "rule__And__Group__0");
					put(grammarAccess.getAndAccess().getGroup_1(), "rule__And__Group_1__0");
					put(grammarAccess.getRelationalExpressionAccess().getGroup(), "rule__RelationalExpression__Group__0");
					put(grammarAccess.getRelationalExpressionAccess().getGroup_1(), "rule__RelationalExpression__Group_1__0");
					put(grammarAccess.getAdditionAccess().getGroup(), "rule__Addition__Group__0");
					put(grammarAccess.getAdditionAccess().getGroup_1(), "rule__Addition__Group_1__0");
					put(grammarAccess.getAdditionAccess().getGroup_1_0_0(), "rule__Addition__Group_1_0_0__0");
					put(grammarAccess.getAdditionAccess().getGroup_1_0_1(), "rule__Addition__Group_1_0_1__0");
					put(grammarAccess.getMultiplicationAccess().getGroup(), "rule__Multiplication__Group__0");
					put(grammarAccess.getMultiplicationAccess().getGroup_1(), "rule__Multiplication__Group_1__0");
					put(grammarAccess.getMultiplicationAccess().getGroup_1_0_0(), "rule__Multiplication__Group_1_0_0__0");
					put(grammarAccess.getMultiplicationAccess().getGroup_1_0_1(), "rule__Multiplication__Group_1_0_1__0");
					put(grammarAccess.getPrimaryExpressionAccess().getGroup_0(), "rule__PrimaryExpression__Group_0__0");
					put(grammarAccess.getPrimaryExpressionAccess().getGroup_1(), "rule__PrimaryExpression__Group_1__0");
					put(grammarAccess.getPrimaryExpressionAccess().getGroup_2(), "rule__PrimaryExpression__Group_2__0");
					put(grammarAccess.getPrimaryExpressionAccess().getGroup_3(), "rule__PrimaryExpression__Group_3__0");
					put(grammarAccess.getIntegerDataTypeAccess().getGroup(), "rule__IntegerDataType__Group__0");
					put(grammarAccess.getBooleanDataTypeAccess().getGroup(), "rule__BooleanDataType__Group__0");
					put(grammarAccess.getFloatDataTypeAccess().getGroup(), "rule__FloatDataType__Group__0");
					put(grammarAccess.getStringDataTypeAccess().getGroup(), "rule__StringDataType__Group__0");
					put(grammarAccess.getModelAccess().getModelsAssignment(), "rule__Model__ModelsAssignment");
					put(grammarAccess.getPackageDeclarationAccess().getNameAssignment_1(), "rule__PackageDeclaration__NameAssignment_1");
					put(grammarAccess.getPackageDeclarationAccess().getElementsAssignment_3(), "rule__PackageDeclaration__ElementsAssignment_3");
					put(grammarAccess.getImportAccess().getImportURIAssignment_1(), "rule__Import__ImportURIAssignment_1");
					put(grammarAccess.getStreamStatementAccess().getReturnStreamAssignment_0(), "rule__StreamStatement__ReturnStreamAssignment_0");
					put(grammarAccess.getStreamStatementAccess().getReturnStreamAssignment_1_1(), "rule__StreamStatement__ReturnStreamAssignment_1_1");
					put(grammarAccess.getStreamStatementAccess().getOperatorAssignment_3(), "rule__StreamStatement__OperatorAssignment_3");
					put(grammarAccess.getStreamVariableStatementAccess().getReferenceAssignment_0(), "rule__StreamVariableStatement__ReferenceAssignment_0");
					put(grammarAccess.getStreamVariableStatementAccess().getExpressionAssignment_2(), "rule__StreamVariableStatement__ExpressionAssignment_2");
					put(grammarAccess.getStreamAccessAccess().getReferenceAssignment_0(), "rule__StreamAccess__ReferenceAssignment_0");
					put(grammarAccess.getStreamAccessAccess().getElementAssignment_2(), "rule__StreamAccess__ElementAssignment_2");
					put(grammarAccess.getStreamDeclarationAccessAccess().getReferenceAssignment_0(), "rule__StreamDeclarationAccess__ReferenceAssignment_0");
					put(grammarAccess.getStreamDeclarationAccessAccess().getElementAssignment_2(), "rule__StreamDeclarationAccess__ElementAssignment_2");
					put(grammarAccess.getStreamDefinitionAccess().getReferenceAssignment_0(), "rule__StreamDefinition__ReferenceAssignment_0");
					put(grammarAccess.getStreamDefinitionAccess().getNameAssignment_1(), "rule__StreamDefinition__NameAssignment_1");
					put(grammarAccess.getJoinOperatorAccess().getParametersAssignment_2(), "rule__JoinOperator__ParametersAssignment_2");
					put(grammarAccess.getJoinOperatorAccess().getParametersAssignment_4(), "rule__JoinOperator__ParametersAssignment_4");
					put(grammarAccess.getJoinOperatorAccess().getParametersAssignment_5_1(), "rule__JoinOperator__ParametersAssignment_5_1");
					put(grammarAccess.getStreamOperatorParameterAccess().getStreamAssignment_0(), "rule__StreamOperatorParameter__StreamAssignment_0");
					put(grammarAccess.getStreamOperatorParameterAccess().getBarrierAssignment_1_1(), "rule__StreamOperatorParameter__BarrierAssignment_1_1");
					put(grammarAccess.getElementJoinOperatorAccess().getElementParametersAssignment_2_0(), "rule__ElementJoinOperator__ElementParametersAssignment_2_0");
					put(grammarAccess.getElementJoinOperatorAccess().getVariableElementParametersAssignment_2_1(), "rule__ElementJoinOperator__VariableElementParametersAssignment_2_1");
					put(grammarAccess.getElementJoinOperatorAccess().getElementParametersAssignment_3_1(), "rule__ElementJoinOperator__ElementParametersAssignment_3_1");
					put(grammarAccess.getElementJoinOperatorAccess().getVariableElementParametersAssignment_4_1(), "rule__ElementJoinOperator__VariableElementParametersAssignment_4_1");
					put(grammarAccess.getElementJoinOperatorAccess().getParameterAssignment_6(), "rule__ElementJoinOperator__ParameterAssignment_6");
					put(grammarAccess.getFilterOperatorAccess().getExpressionAssignment_2(), "rule__FilterOperator__ExpressionAssignment_2");
					put(grammarAccess.getFilterOperatorAccess().getExpressionAssignment_3_1(), "rule__FilterOperator__ExpressionAssignment_3_1");
					put(grammarAccess.getFilterOperatorAccess().getStreamAssignment_5(), "rule__FilterOperator__StreamAssignment_5");
					put(grammarAccess.getSplitOperatorAccess().getParameterAssignment_2(), "rule__SplitOperator__ParameterAssignment_2");
					put(grammarAccess.getLogOperatorAccess().getLocationAssignment_2(), "rule__LogOperator__LocationAssignment_2");
					put(grammarAccess.getLogOperatorAccess().getFormatAssignment_4(), "rule__LogOperator__FormatAssignment_4");
					put(grammarAccess.getLogOperatorAccess().getStreamAssignment_6(), "rule__LogOperator__StreamAssignment_6");
					put(grammarAccess.getRandomOperatorAccess().getMaximumAssignment_2(), "rule__RandomOperator__MaximumAssignment_2");
					put(grammarAccess.getRandomOperatorAccess().getSleepAssignment_4(), "rule__RandomOperator__SleepAssignment_4");
					put(grammarAccess.getRandomOperatorAccess().getStreamAssignment_6(), "rule__RandomOperator__StreamAssignment_6");
					put(grammarAccess.getDecisionTreeOperatorAccess().getAttributesAssignment_2(), "rule__DecisionTreeOperator__AttributesAssignment_2");
					put(grammarAccess.getDecisionTreeOperatorAccess().getAttributesAssignment_4_0(), "rule__DecisionTreeOperator__AttributesAssignment_4_0");
					put(grammarAccess.getDecisionTreeOperatorAccess().getDeltaAssignment_5(), "rule__DecisionTreeOperator__DeltaAssignment_5");
					put(grammarAccess.getDecisionTreeOperatorAccess().getTauAssignment_7(), "rule__DecisionTreeOperator__TauAssignment_7");
					put(grammarAccess.getDecisionTreeOperatorAccess().getBarrierAssignment_9(), "rule__DecisionTreeOperator__BarrierAssignment_9");
					put(grammarAccess.getDecisionTreeOperatorAccess().getFrequencyAssignment_11(), "rule__DecisionTreeOperator__FrequencyAssignment_11");
					put(grammarAccess.getDecisionTreeOperatorAccess().getClassAttributesAssignment_13(), "rule__DecisionTreeOperator__ClassAttributesAssignment_13");
					put(grammarAccess.getDecisionTreeOperatorAccess().getClassAttributesAssignment_14_1(), "rule__DecisionTreeOperator__ClassAttributesAssignment_14_1");
					put(grammarAccess.getDecisionTreeOperatorAccess().getStreamAssignment_16(), "rule__DecisionTreeOperator__StreamAssignment_16");
					put(grammarAccess.getDecisionTreeAttributeAccess().getKeyAssignment_0(), "rule__DecisionTreeAttribute__KeyAssignment_0");
					put(grammarAccess.getDecisionTreeAttributeAccess().getValueAssignment_2(), "rule__DecisionTreeAttribute__ValueAssignment_2");
					put(grammarAccess.getDecisionTreeAttributeAccess().getValueAssignment_3_1(), "rule__DecisionTreeAttribute__ValueAssignment_3_1");
					put(grammarAccess.getMatchOperatorAccess().getExpressionAssignment_2(), "rule__MatchOperator__ExpressionAssignment_2");
					put(grammarAccess.getMatchOperatorAccess().getCalculationAssignment_4(), "rule__MatchOperator__CalculationAssignment_4");
					put(grammarAccess.getMatchOperatorAccess().getStreamAssignment_6(), "rule__MatchOperator__StreamAssignment_6");
					put(grammarAccess.getMatchOperatorAccess().getStreamAssignment_7_1(), "rule__MatchOperator__StreamAssignment_7_1");
					put(grammarAccess.getInputOperatorAccess().getIriAssignment_2(), "rule__InputOperator__IriAssignment_2");
					put(grammarAccess.getInputOperatorAccess().getIriAssignment_3_1(), "rule__InputOperator__IriAssignment_3_1");
					put(grammarAccess.getInputOperatorAccess().getAddressAssignment_5(), "rule__InputOperator__AddressAssignment_5");
					put(grammarAccess.getInputOperatorAccess().getPortAssignment_7(), "rule__InputOperator__PortAssignment_7");
					put(grammarAccess.getTagOperatorAccess().getParametersAssignment_2(), "rule__TagOperator__ParametersAssignment_2");
					put(grammarAccess.getTagOperatorAccess().getParametersAssignment_3_1(), "rule__TagOperator__ParametersAssignment_3_1");
					put(grammarAccess.getTagOperatorAccess().getStreamAssignment_5(), "rule__TagOperator__StreamAssignment_5");
					put(grammarAccess.getSPARQLOperatorAccess().getQueryAssignment_2(), "rule__SPARQLOperator__QueryAssignment_2");
					put(grammarAccess.getSPARQLOperatorAccess().getTargetAssignment_4(), "rule__SPARQLOperator__TargetAssignment_4");
					put(grammarAccess.getSPARQLOperatorAccess().getStreamAssignment_6(), "rule__SPARQLOperator__StreamAssignment_6");
					put(grammarAccess.getQueryTagOperatorAccess().getQueryTypeAssignment_1(), "rule__QueryTagOperator__QueryTypeAssignment_1");
					put(grammarAccess.getQueryTagOperatorAccess().getQueryAssignment_2(), "rule__QueryTagOperator__QueryAssignment_2");
					put(grammarAccess.getSparqlQueryAccess().getVariableAssignment_0(), "rule__SparqlQuery__VariableAssignment_0");
					put(grammarAccess.getSparqlQueryAccess().getUriAssignment_3(), "rule__SparqlQuery__UriAssignment_3");
					put(grammarAccess.getSparqlQueryAccess().getAttributeAssignment_4(), "rule__SparqlQuery__AttributeAssignment_4");
					put(grammarAccess.getSparqlQueryVariableAccess().getVariableAssignment_1(), "rule__SparqlQueryVariable__VariableAssignment_1");
					put(grammarAccess.getSparqlQueryVariableAccess().getVariableAssignment_2_2(), "rule__SparqlQueryVariable__VariableAssignment_2_2");
					put(grammarAccess.getUnTagOperatorAccess().getParametersAssignment_2(), "rule__UnTagOperator__ParametersAssignment_2");
					put(grammarAccess.getUnTagOperatorAccess().getParametersAssignment_3_1(), "rule__UnTagOperator__ParametersAssignment_3_1");
					put(grammarAccess.getUnTagOperatorAccess().getStreamAssignment_5(), "rule__UnTagOperator__StreamAssignment_5");
					put(grammarAccess.getUnTagElementAccess().getElementAssignment_0(), "rule__UnTagElement__ElementAssignment_0");
					put(grammarAccess.getUnTagElementAccess().getReferenceAssignment_2(), "rule__UnTagElement__ReferenceAssignment_2");
					put(grammarAccess.getTagClassElementAccess().getReferenceAssignment_0(), "rule__TagClassElement__ReferenceAssignment_0");
					put(grammarAccess.getTagClassElementAccess().getElementAssignment_3(), "rule__TagClassElement__ElementAssignment_3");
					put(grammarAccess.getTagObjectPropertyElementAccess().getReferenceAssignment_0(), "rule__TagObjectPropertyElement__ReferenceAssignment_0");
					put(grammarAccess.getTagObjectPropertyElementAccess().getElementAssignment_3(), "rule__TagObjectPropertyElement__ElementAssignment_3");
					put(grammarAccess.getTagDataTypePropertyElementAccess().getReferenceAssignment_0(), "rule__TagDataTypePropertyElement__ReferenceAssignment_0");
					put(grammarAccess.getTagDataTypePropertyElementAccess().getElementAssignment_3(), "rule__TagDataTypePropertyElement__ElementAssignment_3");
					put(grammarAccess.getWindowOperatorAccess().getSettingAssignment_0_0(), "rule__WindowOperator__SettingAssignment_0_0");
					put(grammarAccess.getWindowOperatorAccess().getValueAssignment_0_1(), "rule__WindowOperator__ValueAssignment_0_1");
					put(grammarAccess.getWindowOperatorAccess().getUnitAssignment_0_2(), "rule__WindowOperator__UnitAssignment_0_2");
					put(grammarAccess.getWindowOperatorAccess().getSettingAssignment_1(), "rule__WindowOperator__SettingAssignment_1");
					put(grammarAccess.getMarkerOperatorAccess().getExpressionAssignment_1(), "rule__MarkerOperator__ExpressionAssignment_1");
					put(grammarAccess.getSWRLOperatorAccess().getRuleAssignment_2(), "rule__SWRLOperator__RuleAssignment_2");
					put(grammarAccess.getSWRLOperatorAccess().getStreamAssignment_4(), "rule__SWRLOperator__StreamAssignment_4");
					put(grammarAccess.getSWRLRuleAccess().getAtomsAssignment_0(), "rule__SWRLRule__AtomsAssignment_0");
					put(grammarAccess.getSWRLRuleAccess().getAtomsAssignment_1_1(), "rule__SWRLRule__AtomsAssignment_1_1");
					put(grammarAccess.getSWRLRuleAccess().getConsequentAssignment_3(), "rule__SWRLRule__ConsequentAssignment_3");
					put(grammarAccess.getRuleAccess().getNameAssignment_0(), "rule__Rule__NameAssignment_0");
					put(grammarAccess.getRuleAccess().getVariableAssignment_3(), "rule__Rule__VariableAssignment_3");
					put(grammarAccess.getRuleAccess().getVariableAssignment_4_2(), "rule__Rule__VariableAssignment_4_2");
					put(grammarAccess.getCountOperatorAccess().getParameterAssignment_2(), "rule__CountOperator__ParameterAssignment_2");
					put(grammarAccess.getCountOperatorAccess().getStreamAssignment_4(), "rule__CountOperator__StreamAssignment_4");
					put(grammarAccess.getStandardDeviationOperatorAccess().getParameterAssignment_2(), "rule__StandardDeviationOperator__ParameterAssignment_2");
					put(grammarAccess.getStandardDeviationOperatorAccess().getStreamAssignment_4(), "rule__StandardDeviationOperator__StreamAssignment_4");
					put(grammarAccess.getAverageOperatorAccess().getParameterAssignment_2(), "rule__AverageOperator__ParameterAssignment_2");
					put(grammarAccess.getAverageOperatorAccess().getStreamAssignment_4(), "rule__AverageOperator__StreamAssignment_4");
					put(grammarAccess.getAdditionOperatorAccess().getParameterAssignment_2(), "rule__AdditionOperator__ParameterAssignment_2");
					put(grammarAccess.getAdditionOperatorAccess().getLiteralAssignment_4_0(), "rule__AdditionOperator__LiteralAssignment_4_0");
					put(grammarAccess.getAdditionOperatorAccess().getStreamElementAssignment_4_1(), "rule__AdditionOperator__StreamElementAssignment_4_1");
					put(grammarAccess.getAdditionOperatorAccess().getVariableAssignment_4_2(), "rule__AdditionOperator__VariableAssignment_4_2");
					put(grammarAccess.getSubtractionOperatorAccess().getParameterAssignment_2(), "rule__SubtractionOperator__ParameterAssignment_2");
					put(grammarAccess.getSubtractionOperatorAccess().getLiteralAssignment_4_0(), "rule__SubtractionOperator__LiteralAssignment_4_0");
					put(grammarAccess.getSubtractionOperatorAccess().getStreamElementAssignment_4_1(), "rule__SubtractionOperator__StreamElementAssignment_4_1");
					put(grammarAccess.getSubtractionOperatorAccess().getVariableAssignment_4_2(), "rule__SubtractionOperator__VariableAssignment_4_2");
					put(grammarAccess.getMultiplicationOperatorAccess().getParameterAssignment_2(), "rule__MultiplicationOperator__ParameterAssignment_2");
					put(grammarAccess.getMultiplicationOperatorAccess().getLiteralAssignment_4_0(), "rule__MultiplicationOperator__LiteralAssignment_4_0");
					put(grammarAccess.getMultiplicationOperatorAccess().getStreamElementAssignment_4_1(), "rule__MultiplicationOperator__StreamElementAssignment_4_1");
					put(grammarAccess.getMultiplicationOperatorAccess().getVariableAssignment_4_2(), "rule__MultiplicationOperator__VariableAssignment_4_2");
					put(grammarAccess.getDivisionOperatorAccess().getParameterAssignment_2(), "rule__DivisionOperator__ParameterAssignment_2");
					put(grammarAccess.getDivisionOperatorAccess().getLiteralAssignment_4_0(), "rule__DivisionOperator__LiteralAssignment_4_0");
					put(grammarAccess.getDivisionOperatorAccess().getStreamElementAssignment_4_1(), "rule__DivisionOperator__StreamElementAssignment_4_1");
					put(grammarAccess.getDivisionOperatorAccess().getVariableAssignment_4_2(), "rule__DivisionOperator__VariableAssignment_4_2");
					put(grammarAccess.getModuloOperatorAccess().getParameterAssignment_2(), "rule__ModuloOperator__ParameterAssignment_2");
					put(grammarAccess.getModuloOperatorAccess().getLiteralAssignment_4_0(), "rule__ModuloOperator__LiteralAssignment_4_0");
					put(grammarAccess.getModuloOperatorAccess().getStreamElementAssignment_4_1(), "rule__ModuloOperator__StreamElementAssignment_4_1");
					put(grammarAccess.getModuloOperatorAccess().getVariableAssignment_4_2(), "rule__ModuloOperator__VariableAssignment_4_2");
					put(grammarAccess.getOutputOperatorAccess().getStreamAssignment_2(), "rule__OutputOperator__StreamAssignment_2");
					put(grammarAccess.getOutputOperatorAccess().getIriAssignment_4(), "rule__OutputOperator__IriAssignment_4");
					put(grammarAccess.getOutputOperatorAccess().getIriAssignment_5_1(), "rule__OutputOperator__IriAssignment_5_1");
					put(grammarAccess.getOutputOperatorAccess().getAddressAssignment_7(), "rule__OutputOperator__AddressAssignment_7");
					put(grammarAccess.getOutputOperatorAccess().getPortAssignment_9(), "rule__OutputOperator__PortAssignment_9");
					put(grammarAccess.getVariableDeclarationAccess().getTypeAssignment_0(), "rule__VariableDeclaration__TypeAssignment_0");
					put(grammarAccess.getVariableDeclarationAccess().getNameAssignment_1(), "rule__VariableDeclaration__NameAssignment_1");
					put(grammarAccess.getNumberVariableDefinitionAccess().getTypeAssignment_0(), "rule__NumberVariableDefinition__TypeAssignment_0");
					put(grammarAccess.getNumberVariableDefinitionAccess().getNameAssignment_1(), "rule__NumberVariableDefinition__NameAssignment_1");
					put(grammarAccess.getNumberVariableDefinitionAccess().getValueAssignment_3(), "rule__NumberVariableDefinition__ValueAssignment_3");
					put(grammarAccess.getStringVariableDefinitionAccess().getTypeAssignment_0(), "rule__StringVariableDefinition__TypeAssignment_0");
					put(grammarAccess.getStringVariableDefinitionAccess().getNameAssignment_1(), "rule__StringVariableDefinition__NameAssignment_1");
					put(grammarAccess.getStringVariableDefinitionAccess().getValueAssignment_3(), "rule__StringVariableDefinition__ValueAssignment_3");
					put(grammarAccess.getBooleanVariableDefinitionAccess().getTypeAssignment_0(), "rule__BooleanVariableDefinition__TypeAssignment_0");
					put(grammarAccess.getBooleanVariableDefinitionAccess().getNameAssignment_1(), "rule__BooleanVariableDefinition__NameAssignment_1");
					put(grammarAccess.getBooleanVariableDefinitionAccess().getValueAssignment_3(), "rule__BooleanVariableDefinition__ValueAssignment_3");
					put(grammarAccess.getStructureDeclarationAccess().getNameAssignment_1(), "rule__StructureDeclaration__NameAssignment_1");
					put(grammarAccess.getStructureDeclarationAccess().getElementsAssignment_3(), "rule__StructureDeclaration__ElementsAssignment_3");
					put(grammarAccess.getStreamDeclarationAccess().getNameAssignment_1(), "rule__StreamDeclaration__NameAssignment_1");
					put(grammarAccess.getStreamDeclarationAccess().getElementsAssignment_3(), "rule__StreamDeclaration__ElementsAssignment_3");
					put(grammarAccess.getStructureElementsAccess().getElementAssignment_1(), "rule__StructureElements__ElementAssignment_1");
					put(grammarAccess.getOrAccess().getOperatorAssignment_1_1(), "rule__Or__OperatorAssignment_1_1");
					put(grammarAccess.getOrAccess().getRightAssignment_1_2(), "rule__Or__RightAssignment_1_2");
					put(grammarAccess.getAndAccess().getOperatorAssignment_1_1(), "rule__And__OperatorAssignment_1_1");
					put(grammarAccess.getAndAccess().getRightAssignment_1_2(), "rule__And__RightAssignment_1_2");
					put(grammarAccess.getRelationalExpressionAccess().getOperatorAssignment_1_1(), "rule__RelationalExpression__OperatorAssignment_1_1");
					put(grammarAccess.getRelationalExpressionAccess().getRightAssignment_1_2(), "rule__RelationalExpression__RightAssignment_1_2");
					put(grammarAccess.getAdditionAccess().getRightAssignment_1_1(), "rule__Addition__RightAssignment_1_1");
					put(grammarAccess.getMultiplicationAccess().getRightAssignment_1_1(), "rule__Multiplication__RightAssignment_1_1");
					put(grammarAccess.getPrimaryExpressionAccess().getValueAssignment_1_1(), "rule__PrimaryExpression__ValueAssignment_1_1");
					put(grammarAccess.getPrimaryExpressionAccess().getVariableAssignment_2_1(), "rule__PrimaryExpression__VariableAssignment_2_1");
					put(grammarAccess.getPrimaryExpressionAccess().getStreamVariableAssignment_3_1(), "rule__PrimaryExpression__StreamVariableAssignment_3_1");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			de.hs_rm.cs.vs.dsm.ui.contentassist.antlr.internal.InternalFlowParser typedParser = (de.hs_rm.cs.vs.dsm.ui.contentassist.antlr.internal.InternalFlowParser) parser;
			typedParser.entryRuleModel();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public FlowGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(FlowGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
