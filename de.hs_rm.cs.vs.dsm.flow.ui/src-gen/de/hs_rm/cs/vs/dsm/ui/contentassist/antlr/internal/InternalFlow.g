/*
* generated by Xtext
*/
grammar InternalFlow;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package de.hs_rm.cs.vs.dsm.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package de.hs_rm.cs.vs.dsm.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import de.hs_rm.cs.vs.dsm.services.FlowGrammarAccess;

}

@parser::members {
 
 	private FlowGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(FlowGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleModel
entryRuleModel 
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
(
{ before(grammarAccess.getModelAccess().getModelsAssignment()); }
(rule__Model__ModelsAssignment)
{ after(grammarAccess.getModelAccess().getModelsAssignment()); }
)
(
{ before(grammarAccess.getModelAccess().getModelsAssignment()); }
(rule__Model__ModelsAssignment)*
{ after(grammarAccess.getModelAccess().getModelsAssignment()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePackageDeclaration
entryRulePackageDeclaration 
:
{ before(grammarAccess.getPackageDeclarationRule()); }
	 rulePackageDeclaration
{ after(grammarAccess.getPackageDeclarationRule()); } 
	 EOF 
;

// Rule PackageDeclaration
rulePackageDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPackageDeclarationAccess().getGroup()); }
(rule__PackageDeclaration__Group__0)
{ after(grammarAccess.getPackageDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleModelElement
entryRuleModelElement 
:
{ before(grammarAccess.getModelElementRule()); }
	 ruleModelElement
{ after(grammarAccess.getModelElementRule()); } 
	 EOF 
;

// Rule ModelElement
ruleModelElement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModelElementAccess().getAlternatives()); }
(rule__ModelElement__Alternatives)
{ after(grammarAccess.getModelElementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleImport
entryRuleImport 
:
{ before(grammarAccess.getImportRule()); }
	 ruleImport
{ after(grammarAccess.getImportRule()); } 
	 EOF 
;

// Rule Import
ruleImport
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getImportAccess().getGroup()); }
(rule__Import__Group__0)
{ after(grammarAccess.getImportAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStreamStatement
entryRuleStreamStatement 
:
{ before(grammarAccess.getStreamStatementRule()); }
	 ruleStreamStatement
{ after(grammarAccess.getStreamStatementRule()); } 
	 EOF 
;

// Rule StreamStatement
ruleStreamStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStreamStatementAccess().getGroup()); }
(rule__StreamStatement__Group__0)
{ after(grammarAccess.getStreamStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleStreamAccess
entryRuleStreamAccess 
:
{ before(grammarAccess.getStreamAccessRule()); }
	 ruleStreamAccess
{ after(grammarAccess.getStreamAccessRule()); } 
	 EOF 
;

// Rule StreamAccess
ruleStreamAccess
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStreamAccessAccess().getGroup()); }
(rule__StreamAccess__Group__0)
{ after(grammarAccess.getStreamAccessAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleStreamDefinition
entryRuleStreamDefinition 
:
{ before(grammarAccess.getStreamDefinitionRule()); }
	 ruleStreamDefinition
{ after(grammarAccess.getStreamDefinitionRule()); } 
	 EOF 
;

// Rule StreamDefinition
ruleStreamDefinition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStreamDefinitionAccess().getGroup()); }
(rule__StreamDefinition__Group__0)
{ after(grammarAccess.getStreamDefinitionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleJoinOperator
entryRuleJoinOperator 
:
{ before(grammarAccess.getJoinOperatorRule()); }
	 ruleJoinOperator
{ after(grammarAccess.getJoinOperatorRule()); } 
	 EOF 
;

// Rule JoinOperator
ruleJoinOperator
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getJoinOperatorAccess().getGroup()); }
(rule__JoinOperator__Group__0)
{ after(grammarAccess.getJoinOperatorAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStreamOperatorParameter
entryRuleStreamOperatorParameter 
:
{ before(grammarAccess.getStreamOperatorParameterRule()); }
	 ruleStreamOperatorParameter
{ after(grammarAccess.getStreamOperatorParameterRule()); } 
	 EOF 
;

// Rule StreamOperatorParameter
ruleStreamOperatorParameter
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStreamOperatorParameterAccess().getGroup()); }
(rule__StreamOperatorParameter__Group__0)
{ after(grammarAccess.getStreamOperatorParameterAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleElementJoinOperator
entryRuleElementJoinOperator 
:
{ before(grammarAccess.getElementJoinOperatorRule()); }
	 ruleElementJoinOperator
{ after(grammarAccess.getElementJoinOperatorRule()); } 
	 EOF 
;

// Rule ElementJoinOperator
ruleElementJoinOperator
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getElementJoinOperatorAccess().getGroup()); }
(rule__ElementJoinOperator__Group__0)
{ after(grammarAccess.getElementJoinOperatorAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFilterOperator
entryRuleFilterOperator 
:
{ before(grammarAccess.getFilterOperatorRule()); }
	 ruleFilterOperator
{ after(grammarAccess.getFilterOperatorRule()); } 
	 EOF 
;

// Rule FilterOperator
ruleFilterOperator
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFilterOperatorAccess().getGroup()); }
(rule__FilterOperator__Group__0)
{ after(grammarAccess.getFilterOperatorAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSplitOperator
entryRuleSplitOperator 
:
{ before(grammarAccess.getSplitOperatorRule()); }
	 ruleSplitOperator
{ after(grammarAccess.getSplitOperatorRule()); } 
	 EOF 
;

// Rule SplitOperator
ruleSplitOperator
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSplitOperatorAccess().getGroup()); }
(rule__SplitOperator__Group__0)
{ after(grammarAccess.getSplitOperatorAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMatchOperator
entryRuleMatchOperator 
:
{ before(grammarAccess.getMatchOperatorRule()); }
	 ruleMatchOperator
{ after(grammarAccess.getMatchOperatorRule()); } 
	 EOF 
;

// Rule MatchOperator
ruleMatchOperator
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMatchOperatorAccess().getGroup()); }
(rule__MatchOperator__Group__0)
{ after(grammarAccess.getMatchOperatorAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInputOperator
entryRuleInputOperator 
:
{ before(grammarAccess.getInputOperatorRule()); }
	 ruleInputOperator
{ after(grammarAccess.getInputOperatorRule()); } 
	 EOF 
;

// Rule InputOperator
ruleInputOperator
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInputOperatorAccess().getGroup()); }
(rule__InputOperator__Group__0)
{ after(grammarAccess.getInputOperatorAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleReturnTypeOperator
entryRuleReturnTypeOperator 
:
{ before(grammarAccess.getReturnTypeOperatorRule()); }
	 ruleReturnTypeOperator
{ after(grammarAccess.getReturnTypeOperatorRule()); } 
	 EOF 
;

// Rule ReturnTypeOperator
ruleReturnTypeOperator
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getReturnTypeOperatorAccess().getAlternatives()); }
(rule__ReturnTypeOperator__Alternatives)
{ after(grammarAccess.getReturnTypeOperatorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNoReturnTypeOperator
entryRuleNoReturnTypeOperator 
:
{ before(grammarAccess.getNoReturnTypeOperatorRule()); }
	 ruleNoReturnTypeOperator
{ after(grammarAccess.getNoReturnTypeOperatorRule()); } 
	 EOF 
;

// Rule NoReturnTypeOperator
ruleNoReturnTypeOperator
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNoReturnTypeOperatorAccess().getOutputOperatorParserRuleCall()); }
	ruleOutputOperator
{ after(grammarAccess.getNoReturnTypeOperatorAccess().getOutputOperatorParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTagOperator
entryRuleTagOperator 
:
{ before(grammarAccess.getTagOperatorRule()); }
	 ruleTagOperator
{ after(grammarAccess.getTagOperatorRule()); } 
	 EOF 
;

// Rule TagOperator
ruleTagOperator
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTagOperatorAccess().getGroup()); }
(rule__TagOperator__Group__0)
{ after(grammarAccess.getTagOperatorAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleQueryTagOperator
entryRuleQueryTagOperator 
:
{ before(grammarAccess.getQueryTagOperatorRule()); }
	 ruleQueryTagOperator
{ after(grammarAccess.getQueryTagOperatorRule()); } 
	 EOF 
;

// Rule QueryTagOperator
ruleQueryTagOperator
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQueryTagOperatorAccess().getGroup()); }
(rule__QueryTagOperator__Group__0)
{ after(grammarAccess.getQueryTagOperatorAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSparqlQuery
entryRuleSparqlQuery 
:
{ before(grammarAccess.getSparqlQueryRule()); }
	 ruleSparqlQuery
{ after(grammarAccess.getSparqlQueryRule()); } 
	 EOF 
;

// Rule SparqlQuery
ruleSparqlQuery
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSparqlQueryAccess().getGroup()); }
(rule__SparqlQuery__Group__0)
{ after(grammarAccess.getSparqlQueryAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSparqlQueryVariable
entryRuleSparqlQueryVariable 
:
{ before(grammarAccess.getSparqlQueryVariableRule()); }
	 ruleSparqlQueryVariable
{ after(grammarAccess.getSparqlQueryVariableRule()); } 
	 EOF 
;

// Rule SparqlQueryVariable
ruleSparqlQueryVariable
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSparqlQueryVariableAccess().getGroup()); }
(rule__SparqlQueryVariable__Group__0)
{ after(grammarAccess.getSparqlQueryVariableAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUnTagOperator
entryRuleUnTagOperator 
:
{ before(grammarAccess.getUnTagOperatorRule()); }
	 ruleUnTagOperator
{ after(grammarAccess.getUnTagOperatorRule()); } 
	 EOF 
;

// Rule UnTagOperator
ruleUnTagOperator
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUnTagOperatorAccess().getGroup()); }
(rule__UnTagOperator__Group__0)
{ after(grammarAccess.getUnTagOperatorAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUnTagElement
entryRuleUnTagElement 
:
{ before(grammarAccess.getUnTagElementRule()); }
	 ruleUnTagElement
{ after(grammarAccess.getUnTagElementRule()); } 
	 EOF 
;

// Rule UnTagElement
ruleUnTagElement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUnTagElementAccess().getGroup()); }
(rule__UnTagElement__Group__0)
{ after(grammarAccess.getUnTagElementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTagElement
entryRuleTagElement 
:
{ before(grammarAccess.getTagElementRule()); }
	 ruleTagElement
{ after(grammarAccess.getTagElementRule()); } 
	 EOF 
;

// Rule TagElement
ruleTagElement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTagElementAccess().getAlternatives()); }
(rule__TagElement__Alternatives)
{ after(grammarAccess.getTagElementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTagClassElement
entryRuleTagClassElement 
:
{ before(grammarAccess.getTagClassElementRule()); }
	 ruleTagClassElement
{ after(grammarAccess.getTagClassElementRule()); } 
	 EOF 
;

// Rule TagClassElement
ruleTagClassElement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTagClassElementAccess().getGroup()); }
(rule__TagClassElement__Group__0)
{ after(grammarAccess.getTagClassElementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTagObjectPropertyElement
entryRuleTagObjectPropertyElement 
:
{ before(grammarAccess.getTagObjectPropertyElementRule()); }
	 ruleTagObjectPropertyElement
{ after(grammarAccess.getTagObjectPropertyElementRule()); } 
	 EOF 
;

// Rule TagObjectPropertyElement
ruleTagObjectPropertyElement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTagObjectPropertyElementAccess().getGroup()); }
(rule__TagObjectPropertyElement__Group__0)
{ after(grammarAccess.getTagObjectPropertyElementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTagDataTypePropertyElement
entryRuleTagDataTypePropertyElement 
:
{ before(grammarAccess.getTagDataTypePropertyElementRule()); }
	 ruleTagDataTypePropertyElement
{ after(grammarAccess.getTagDataTypePropertyElementRule()); } 
	 EOF 
;

// Rule TagDataTypePropertyElement
ruleTagDataTypePropertyElement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTagDataTypePropertyElementAccess().getGroup()); }
(rule__TagDataTypePropertyElement__Group__0)
{ after(grammarAccess.getTagDataTypePropertyElementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBarrierOperator
entryRuleBarrierOperator 
:
{ before(grammarAccess.getBarrierOperatorRule()); }
	 ruleBarrierOperator
{ after(grammarAccess.getBarrierOperatorRule()); } 
	 EOF 
;

// Rule BarrierOperator
ruleBarrierOperator
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBarrierOperatorAccess().getAlternatives()); }
(rule__BarrierOperator__Alternatives)
{ after(grammarAccess.getBarrierOperatorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleWindowOperator
entryRuleWindowOperator 
:
{ before(grammarAccess.getWindowOperatorRule()); }
	 ruleWindowOperator
{ after(grammarAccess.getWindowOperatorRule()); } 
	 EOF 
;

// Rule WindowOperator
ruleWindowOperator
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getWindowOperatorAccess().getAlternatives()); }
(rule__WindowOperator__Alternatives)
{ after(grammarAccess.getWindowOperatorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMarkerOperator
entryRuleMarkerOperator 
:
{ before(grammarAccess.getMarkerOperatorRule()); }
	 ruleMarkerOperator
{ after(grammarAccess.getMarkerOperatorRule()); } 
	 EOF 
;

// Rule MarkerOperator
ruleMarkerOperator
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMarkerOperatorAccess().getGroup()); }
(rule__MarkerOperator__Group__0)
{ after(grammarAccess.getMarkerOperatorAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSWRLOperator
entryRuleSWRLOperator 
:
{ before(grammarAccess.getSWRLOperatorRule()); }
	 ruleSWRLOperator
{ after(grammarAccess.getSWRLOperatorRule()); } 
	 EOF 
;

// Rule SWRLOperator
ruleSWRLOperator
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSWRLOperatorAccess().getGroup()); }
(rule__SWRLOperator__Group__0)
{ after(grammarAccess.getSWRLOperatorAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSWRLRule
entryRuleSWRLRule 
:
{ before(grammarAccess.getSWRLRuleRule()); }
	 ruleSWRLRule
{ after(grammarAccess.getSWRLRuleRule()); } 
	 EOF 
;

// Rule SWRLRule
ruleSWRLRule
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSWRLRuleAccess().getGroup()); }
(rule__SWRLRule__Group__0)
{ after(grammarAccess.getSWRLRuleAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAntecedentRule
entryRuleAntecedentRule 
:
{ before(grammarAccess.getAntecedentRuleRule()); }
	 ruleAntecedentRule
{ after(grammarAccess.getAntecedentRuleRule()); } 
	 EOF 
;

// Rule AntecedentRule
ruleAntecedentRule
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAntecedentRuleAccess().getGroup()); }
(rule__AntecedentRule__Group__0)
{ after(grammarAccess.getAntecedentRuleAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConsequentRule
entryRuleConsequentRule 
:
{ before(grammarAccess.getConsequentRuleRule()); }
	 ruleConsequentRule
{ after(grammarAccess.getConsequentRuleRule()); } 
	 EOF 
;

// Rule ConsequentRule
ruleConsequentRule
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConsequentRuleAccess().getGroup()); }
(rule__ConsequentRule__Group__0)
{ after(grammarAccess.getConsequentRuleAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRule
entryRuleRule 
:
{ before(grammarAccess.getRuleRule()); }
	 ruleRule
{ after(grammarAccess.getRuleRule()); } 
	 EOF 
;

// Rule Rule
ruleRule
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRuleAccess().getGroup()); }
(rule__Rule__Group__0)
{ after(grammarAccess.getRuleAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOCLOperator
entryRuleOCLOperator 
:
{ before(grammarAccess.getOCLOperatorRule()); }
	 ruleOCLOperator
{ after(grammarAccess.getOCLOperatorRule()); } 
	 EOF 
;

// Rule OCLOperator
ruleOCLOperator
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOCLOperatorAccess().getGroup()); }
(rule__OCLOperator__Group__0)
{ after(grammarAccess.getOCLOperatorAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCountOperator
entryRuleCountOperator 
:
{ before(grammarAccess.getCountOperatorRule()); }
	 ruleCountOperator
{ after(grammarAccess.getCountOperatorRule()); } 
	 EOF 
;

// Rule CountOperator
ruleCountOperator
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCountOperatorAccess().getGroup()); }
(rule__CountOperator__Group__0)
{ after(grammarAccess.getCountOperatorAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStandardDeviationOperator
entryRuleStandardDeviationOperator 
:
{ before(grammarAccess.getStandardDeviationOperatorRule()); }
	 ruleStandardDeviationOperator
{ after(grammarAccess.getStandardDeviationOperatorRule()); } 
	 EOF 
;

// Rule StandardDeviationOperator
ruleStandardDeviationOperator
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStandardDeviationOperatorAccess().getGroup()); }
(rule__StandardDeviationOperator__Group__0)
{ after(grammarAccess.getStandardDeviationOperatorAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAverageOperator
entryRuleAverageOperator 
:
{ before(grammarAccess.getAverageOperatorRule()); }
	 ruleAverageOperator
{ after(grammarAccess.getAverageOperatorRule()); } 
	 EOF 
;

// Rule AverageOperator
ruleAverageOperator
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAverageOperatorAccess().getGroup()); }
(rule__AverageOperator__Group__0)
{ after(grammarAccess.getAverageOperatorAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAdditionOperator
entryRuleAdditionOperator 
:
{ before(grammarAccess.getAdditionOperatorRule()); }
	 ruleAdditionOperator
{ after(grammarAccess.getAdditionOperatorRule()); } 
	 EOF 
;

// Rule AdditionOperator
ruleAdditionOperator
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAdditionOperatorAccess().getGroup()); }
(rule__AdditionOperator__Group__0)
{ after(grammarAccess.getAdditionOperatorAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSubtractionOperator
entryRuleSubtractionOperator 
:
{ before(grammarAccess.getSubtractionOperatorRule()); }
	 ruleSubtractionOperator
{ after(grammarAccess.getSubtractionOperatorRule()); } 
	 EOF 
;

// Rule SubtractionOperator
ruleSubtractionOperator
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSubtractionOperatorAccess().getGroup()); }
(rule__SubtractionOperator__Group__0)
{ after(grammarAccess.getSubtractionOperatorAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMultiplicationOperator
entryRuleMultiplicationOperator 
:
{ before(grammarAccess.getMultiplicationOperatorRule()); }
	 ruleMultiplicationOperator
{ after(grammarAccess.getMultiplicationOperatorRule()); } 
	 EOF 
;

// Rule MultiplicationOperator
ruleMultiplicationOperator
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMultiplicationOperatorAccess().getGroup()); }
(rule__MultiplicationOperator__Group__0)
{ after(grammarAccess.getMultiplicationOperatorAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDivisionOperator
entryRuleDivisionOperator 
:
{ before(grammarAccess.getDivisionOperatorRule()); }
	 ruleDivisionOperator
{ after(grammarAccess.getDivisionOperatorRule()); } 
	 EOF 
;

// Rule DivisionOperator
ruleDivisionOperator
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDivisionOperatorAccess().getGroup()); }
(rule__DivisionOperator__Group__0)
{ after(grammarAccess.getDivisionOperatorAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOutputOperator
entryRuleOutputOperator 
:
{ before(grammarAccess.getOutputOperatorRule()); }
	 ruleOutputOperator
{ after(grammarAccess.getOutputOperatorRule()); } 
	 EOF 
;

// Rule OutputOperator
ruleOutputOperator
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOutputOperatorAccess().getGroup()); }
(rule__OutputOperator__Group__0)
{ after(grammarAccess.getOutputOperatorAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVariableDefinition
entryRuleVariableDefinition 
:
{ before(grammarAccess.getVariableDefinitionRule()); }
	 ruleVariableDefinition
{ after(grammarAccess.getVariableDefinitionRule()); } 
	 EOF 
;

// Rule VariableDefinition
ruleVariableDefinition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVariableDefinitionAccess().getAlternatives()); }
(rule__VariableDefinition__Alternatives)
{ after(grammarAccess.getVariableDefinitionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVariableDeclaration
entryRuleVariableDeclaration 
:
{ before(grammarAccess.getVariableDeclarationRule()); }
	 ruleVariableDeclaration
{ after(grammarAccess.getVariableDeclarationRule()); } 
	 EOF 
;

// Rule VariableDeclaration
ruleVariableDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVariableDeclarationAccess().getGroup()); }
(rule__VariableDeclaration__Group__0)
{ after(grammarAccess.getVariableDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNumberVariableDefinition
entryRuleNumberVariableDefinition 
:
{ before(grammarAccess.getNumberVariableDefinitionRule()); }
	 ruleNumberVariableDefinition
{ after(grammarAccess.getNumberVariableDefinitionRule()); } 
	 EOF 
;

// Rule NumberVariableDefinition
ruleNumberVariableDefinition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNumberVariableDefinitionAccess().getGroup()); }
(rule__NumberVariableDefinition__Group__0)
{ after(grammarAccess.getNumberVariableDefinitionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStringVariableDefinition
entryRuleStringVariableDefinition 
:
{ before(grammarAccess.getStringVariableDefinitionRule()); }
	 ruleStringVariableDefinition
{ after(grammarAccess.getStringVariableDefinitionRule()); } 
	 EOF 
;

// Rule StringVariableDefinition
ruleStringVariableDefinition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStringVariableDefinitionAccess().getGroup()); }
(rule__StringVariableDefinition__Group__0)
{ after(grammarAccess.getStringVariableDefinitionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBooleanVariableDefinition
entryRuleBooleanVariableDefinition 
:
{ before(grammarAccess.getBooleanVariableDefinitionRule()); }
	 ruleBooleanVariableDefinition
{ after(grammarAccess.getBooleanVariableDefinitionRule()); } 
	 EOF 
;

// Rule BooleanVariableDefinition
ruleBooleanVariableDefinition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBooleanVariableDefinitionAccess().getGroup()); }
(rule__BooleanVariableDefinition__Group__0)
{ after(grammarAccess.getBooleanVariableDefinitionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStructureDeclaration
entryRuleStructureDeclaration 
:
{ before(grammarAccess.getStructureDeclarationRule()); }
	 ruleStructureDeclaration
{ after(grammarAccess.getStructureDeclarationRule()); } 
	 EOF 
;

// Rule StructureDeclaration
ruleStructureDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStructureDeclarationAccess().getGroup()); }
(rule__StructureDeclaration__Group__0)
{ after(grammarAccess.getStructureDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStreamDeclaration
entryRuleStreamDeclaration 
:
{ before(grammarAccess.getStreamDeclarationRule()); }
	 ruleStreamDeclaration
{ after(grammarAccess.getStreamDeclarationRule()); } 
	 EOF 
;

// Rule StreamDeclaration
ruleStreamDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStreamDeclarationAccess().getGroup()); }
(rule__StreamDeclaration__Group__0)
{ after(grammarAccess.getStreamDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStreamElement
entryRuleStreamElement 
:
{ before(grammarAccess.getStreamElementRule()); }
	 ruleStreamElement
{ after(grammarAccess.getStreamElementRule()); } 
	 EOF 
;

// Rule StreamElement
ruleStreamElement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStreamElementAccess().getAlternatives()); }
(rule__StreamElement__Alternatives)
{ after(grammarAccess.getStreamElementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStructureElements
entryRuleStructureElements 
:
{ before(grammarAccess.getStructureElementsRule()); }
	 ruleStructureElements
{ after(grammarAccess.getStructureElementsRule()); } 
	 EOF 
;

// Rule StructureElements
ruleStructureElements
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStructureElementsAccess().getGroup()); }
(rule__StructureElements__Group__0)
{ after(grammarAccess.getStructureElementsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpression
entryRuleExpression 
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleExpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule Expression
ruleExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpressionAccess().getOrParserRuleCall()); }
	ruleOr
{ after(grammarAccess.getExpressionAccess().getOrParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOr
entryRuleOr 
:
{ before(grammarAccess.getOrRule()); }
	 ruleOr
{ after(grammarAccess.getOrRule()); } 
	 EOF 
;

// Rule Or
ruleOr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOrAccess().getGroup()); }
(rule__Or__Group__0)
{ after(grammarAccess.getOrAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAnd
entryRuleAnd 
:
{ before(grammarAccess.getAndRule()); }
	 ruleAnd
{ after(grammarAccess.getAndRule()); } 
	 EOF 
;

// Rule And
ruleAnd
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAndAccess().getGroup()); }
(rule__And__Group__0)
{ after(grammarAccess.getAndAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRelationalExpression
entryRuleRelationalExpression 
:
{ before(grammarAccess.getRelationalExpressionRule()); }
	 ruleRelationalExpression
{ after(grammarAccess.getRelationalExpressionRule()); } 
	 EOF 
;

// Rule RelationalExpression
ruleRelationalExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRelationalExpressionAccess().getGroup()); }
(rule__RelationalExpression__Group__0)
{ after(grammarAccess.getRelationalExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAddition
entryRuleAddition 
:
{ before(grammarAccess.getAdditionRule()); }
	 ruleAddition
{ after(grammarAccess.getAdditionRule()); } 
	 EOF 
;

// Rule Addition
ruleAddition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAdditionAccess().getGroup()); }
(rule__Addition__Group__0)
{ after(grammarAccess.getAdditionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMultiplication
entryRuleMultiplication 
:
{ before(grammarAccess.getMultiplicationRule()); }
	 ruleMultiplication
{ after(grammarAccess.getMultiplicationRule()); } 
	 EOF 
;

// Rule Multiplication
ruleMultiplication
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMultiplicationAccess().getGroup()); }
(rule__Multiplication__Group__0)
{ after(grammarAccess.getMultiplicationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePrimaryExpression
entryRulePrimaryExpression 
:
{ before(grammarAccess.getPrimaryExpressionRule()); }
	 rulePrimaryExpression
{ after(grammarAccess.getPrimaryExpressionRule()); } 
	 EOF 
;

// Rule PrimaryExpression
rulePrimaryExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getAlternatives()); }
(rule__PrimaryExpression__Alternatives)
{ after(grammarAccess.getPrimaryExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDataType
entryRuleDataType 
:
{ before(grammarAccess.getDataTypeRule()); }
	 ruleDataType
{ after(grammarAccess.getDataTypeRule()); } 
	 EOF 
;

// Rule DataType
ruleDataType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDataTypeAccess().getAlternatives()); }
(rule__DataType__Alternatives)
{ after(grammarAccess.getDataTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSimpleDataType
entryRuleSimpleDataType 
:
{ before(grammarAccess.getSimpleDataTypeRule()); }
	 ruleSimpleDataType
{ after(grammarAccess.getSimpleDataTypeRule()); } 
	 EOF 
;

// Rule SimpleDataType
ruleSimpleDataType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSimpleDataTypeAccess().getAlternatives()); }
(rule__SimpleDataType__Alternatives)
{ after(grammarAccess.getSimpleDataTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleComplexDataType
entryRuleComplexDataType 
:
{ before(grammarAccess.getComplexDataTypeRule()); }
	 ruleComplexDataType
{ after(grammarAccess.getComplexDataTypeRule()); } 
	 EOF 
;

// Rule ComplexDataType
ruleComplexDataType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getComplexDataTypeAccess().getStringDataTypeParserRuleCall()); }
	ruleStringDataType
{ after(grammarAccess.getComplexDataTypeAccess().getStringDataTypeParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIntegerDataType
entryRuleIntegerDataType 
:
{ before(grammarAccess.getIntegerDataTypeRule()); }
	 ruleIntegerDataType
{ after(grammarAccess.getIntegerDataTypeRule()); } 
	 EOF 
;

// Rule IntegerDataType
ruleIntegerDataType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIntegerDataTypeAccess().getGroup()); }
(rule__IntegerDataType__Group__0)
{ after(grammarAccess.getIntegerDataTypeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBooleanDataType
entryRuleBooleanDataType 
:
{ before(grammarAccess.getBooleanDataTypeRule()); }
	 ruleBooleanDataType
{ after(grammarAccess.getBooleanDataTypeRule()); } 
	 EOF 
;

// Rule BooleanDataType
ruleBooleanDataType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBooleanDataTypeAccess().getGroup()); }
(rule__BooleanDataType__Group__0)
{ after(grammarAccess.getBooleanDataTypeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFloatDataType
entryRuleFloatDataType 
:
{ before(grammarAccess.getFloatDataTypeRule()); }
	 ruleFloatDataType
{ after(grammarAccess.getFloatDataTypeRule()); } 
	 EOF 
;

// Rule FloatDataType
ruleFloatDataType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFloatDataTypeAccess().getGroup()); }
(rule__FloatDataType__Group__0)
{ after(grammarAccess.getFloatDataTypeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStringDataType
entryRuleStringDataType 
:
{ before(grammarAccess.getStringDataTypeRule()); }
	 ruleStringDataType
{ after(grammarAccess.getStringDataTypeRule()); } 
	 EOF 
;

// Rule StringDataType
ruleStringDataType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStringDataTypeAccess().getGroup()); }
(rule__StringDataType__Group__0)
{ after(grammarAccess.getStringDataTypeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




// Rule SparqlQueryType
ruleSparqlQueryType
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSparqlQueryTypeAccess().getAlternatives()); }
(rule__SparqlQueryType__Alternatives)
{ after(grammarAccess.getSparqlQueryTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__ModelElement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelElementAccess().getPackageDeclarationParserRuleCall_0()); }
	rulePackageDeclaration
{ after(grammarAccess.getModelElementAccess().getPackageDeclarationParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getModelElementAccess().getImportParserRuleCall_1()); }
	ruleImport
{ after(grammarAccess.getModelElementAccess().getImportParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getModelElementAccess().getStructureDeclarationParserRuleCall_2()); }
	ruleStructureDeclaration
{ after(grammarAccess.getModelElementAccess().getStructureDeclarationParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getModelElementAccess().getStreamDeclarationParserRuleCall_3()); }
	ruleStreamDeclaration
{ after(grammarAccess.getModelElementAccess().getStreamDeclarationParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getModelElementAccess().getVariableDefinitionParserRuleCall_4()); }
	ruleVariableDefinition
{ after(grammarAccess.getModelElementAccess().getVariableDefinitionParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getModelElementAccess().getStreamStatementParserRuleCall_5()); }
	ruleStreamStatement
{ after(grammarAccess.getModelElementAccess().getStreamStatementParserRuleCall_5()); }
)

    |(
{ before(grammarAccess.getModelElementAccess().getStreamDefinitionParserRuleCall_6()); }
	ruleStreamDefinition
{ after(grammarAccess.getModelElementAccess().getStreamDefinitionParserRuleCall_6()); }
)

    |(
{ before(grammarAccess.getModelElementAccess().getStreamAccessParserRuleCall_7()); }
	ruleStreamAccess
{ after(grammarAccess.getModelElementAccess().getStreamAccessParserRuleCall_7()); }
)

    |(
{ before(grammarAccess.getModelElementAccess().getNoReturnTypeOperatorParserRuleCall_8()); }
	ruleNoReturnTypeOperator
{ after(grammarAccess.getModelElementAccess().getNoReturnTypeOperatorParserRuleCall_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ElementJoinOperator__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementJoinOperatorAccess().getElementParametersAssignment_2_0()); }
(rule__ElementJoinOperator__ElementParametersAssignment_2_0)
{ after(grammarAccess.getElementJoinOperatorAccess().getElementParametersAssignment_2_0()); }
)

    |(
{ before(grammarAccess.getElementJoinOperatorAccess().getVariableElementParametersAssignment_2_1()); }
(rule__ElementJoinOperator__VariableElementParametersAssignment_2_1)
{ after(grammarAccess.getElementJoinOperatorAccess().getVariableElementParametersAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnTypeOperator__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReturnTypeOperatorAccess().getInputOperatorParserRuleCall_0()); }
	ruleInputOperator
{ after(grammarAccess.getReturnTypeOperatorAccess().getInputOperatorParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getReturnTypeOperatorAccess().getJoinOperatorParserRuleCall_1()); }
	ruleJoinOperator
{ after(grammarAccess.getReturnTypeOperatorAccess().getJoinOperatorParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getReturnTypeOperatorAccess().getTagOperatorParserRuleCall_2()); }
	ruleTagOperator
{ after(grammarAccess.getReturnTypeOperatorAccess().getTagOperatorParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getReturnTypeOperatorAccess().getUnTagOperatorParserRuleCall_3()); }
	ruleUnTagOperator
{ after(grammarAccess.getReturnTypeOperatorAccess().getUnTagOperatorParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getReturnTypeOperatorAccess().getFilterOperatorParserRuleCall_4()); }
	ruleFilterOperator
{ after(grammarAccess.getReturnTypeOperatorAccess().getFilterOperatorParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getReturnTypeOperatorAccess().getSplitOperatorParserRuleCall_5()); }
	ruleSplitOperator
{ after(grammarAccess.getReturnTypeOperatorAccess().getSplitOperatorParserRuleCall_5()); }
)

    |(
{ before(grammarAccess.getReturnTypeOperatorAccess().getCountOperatorParserRuleCall_6()); }
	ruleCountOperator
{ after(grammarAccess.getReturnTypeOperatorAccess().getCountOperatorParserRuleCall_6()); }
)

    |(
{ before(grammarAccess.getReturnTypeOperatorAccess().getStandardDeviationOperatorParserRuleCall_7()); }
	ruleStandardDeviationOperator
{ after(grammarAccess.getReturnTypeOperatorAccess().getStandardDeviationOperatorParserRuleCall_7()); }
)

    |(
{ before(grammarAccess.getReturnTypeOperatorAccess().getAverageOperatorParserRuleCall_8()); }
	ruleAverageOperator
{ after(grammarAccess.getReturnTypeOperatorAccess().getAverageOperatorParserRuleCall_8()); }
)

    |(
{ before(grammarAccess.getReturnTypeOperatorAccess().getElementJoinOperatorParserRuleCall_9()); }
	ruleElementJoinOperator
{ after(grammarAccess.getReturnTypeOperatorAccess().getElementJoinOperatorParserRuleCall_9()); }
)

    |(
{ before(grammarAccess.getReturnTypeOperatorAccess().getMatchOperatorParserRuleCall_10()); }
	ruleMatchOperator
{ after(grammarAccess.getReturnTypeOperatorAccess().getMatchOperatorParserRuleCall_10()); }
)

    |(
{ before(grammarAccess.getReturnTypeOperatorAccess().getOCLOperatorParserRuleCall_11()); }
	ruleOCLOperator
{ after(grammarAccess.getReturnTypeOperatorAccess().getOCLOperatorParserRuleCall_11()); }
)

    |(
{ before(grammarAccess.getReturnTypeOperatorAccess().getSWRLOperatorParserRuleCall_12()); }
	ruleSWRLOperator
{ after(grammarAccess.getReturnTypeOperatorAccess().getSWRLOperatorParserRuleCall_12()); }
)

    |(
{ before(grammarAccess.getReturnTypeOperatorAccess().getAdditionOperatorParserRuleCall_13()); }
	ruleAdditionOperator
{ after(grammarAccess.getReturnTypeOperatorAccess().getAdditionOperatorParserRuleCall_13()); }
)

    |(
{ before(grammarAccess.getReturnTypeOperatorAccess().getSubtractionOperatorParserRuleCall_14()); }
	ruleSubtractionOperator
{ after(grammarAccess.getReturnTypeOperatorAccess().getSubtractionOperatorParserRuleCall_14()); }
)

    |(
{ before(grammarAccess.getReturnTypeOperatorAccess().getMultiplicationOperatorParserRuleCall_15()); }
	ruleMultiplicationOperator
{ after(grammarAccess.getReturnTypeOperatorAccess().getMultiplicationOperatorParserRuleCall_15()); }
)

    |(
{ before(grammarAccess.getReturnTypeOperatorAccess().getDivisionOperatorParserRuleCall_16()); }
	ruleDivisionOperator
{ after(grammarAccess.getReturnTypeOperatorAccess().getDivisionOperatorParserRuleCall_16()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TagElement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTagElementAccess().getTagClassElementParserRuleCall_0()); }
	ruleTagClassElement
{ after(grammarAccess.getTagElementAccess().getTagClassElementParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getTagElementAccess().getTagObjectPropertyElementParserRuleCall_1()); }
	ruleTagObjectPropertyElement
{ after(grammarAccess.getTagElementAccess().getTagObjectPropertyElementParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getTagElementAccess().getTagDataTypePropertyElementParserRuleCall_2()); }
	ruleTagDataTypePropertyElement
{ after(grammarAccess.getTagElementAccess().getTagDataTypePropertyElementParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BarrierOperator__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBarrierOperatorAccess().getWindowOperatorParserRuleCall_0()); }
	ruleWindowOperator
{ after(grammarAccess.getBarrierOperatorAccess().getWindowOperatorParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getBarrierOperatorAccess().getMarkerOperatorParserRuleCall_1()); }
	ruleMarkerOperator
{ after(grammarAccess.getBarrierOperatorAccess().getMarkerOperatorParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WindowOperator__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWindowOperatorAccess().getGroup_0()); }
(rule__WindowOperator__Group_0__0)
{ after(grammarAccess.getWindowOperatorAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getWindowOperatorAccess().getSettingAssignment_1()); }
(rule__WindowOperator__SettingAssignment_1)
{ after(grammarAccess.getWindowOperatorAccess().getSettingAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WindowOperator__UnitAlternatives_0_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWindowOperatorAccess().getUnitMinKeyword_0_2_0_0()); }

	'min' 

{ after(grammarAccess.getWindowOperatorAccess().getUnitMinKeyword_0_2_0_0()); }
)

    |(
{ before(grammarAccess.getWindowOperatorAccess().getUnitHrsKeyword_0_2_0_1()); }

	'hrs' 

{ after(grammarAccess.getWindowOperatorAccess().getUnitHrsKeyword_0_2_0_1()); }
)

    |(
{ before(grammarAccess.getWindowOperatorAccess().getUnitSecKeyword_0_2_0_2()); }

	'sec' 

{ after(grammarAccess.getWindowOperatorAccess().getUnitSecKeyword_0_2_0_2()); }
)

    |(
{ before(grammarAccess.getWindowOperatorAccess().getUnitElementsKeyword_0_2_0_3()); }

	'elements' 

{ after(grammarAccess.getWindowOperatorAccess().getUnitElementsKeyword_0_2_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionOperator__Alternatives_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionOperatorAccess().getLiteralAssignment_4_0()); }
(rule__AdditionOperator__LiteralAssignment_4_0)
{ after(grammarAccess.getAdditionOperatorAccess().getLiteralAssignment_4_0()); }
)

    |(
{ before(grammarAccess.getAdditionOperatorAccess().getStreamElementsAssignment_4_1()); }
(rule__AdditionOperator__StreamElementsAssignment_4_1)
{ after(grammarAccess.getAdditionOperatorAccess().getStreamElementsAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SubtractionOperator__Alternatives_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubtractionOperatorAccess().getLiteralAssignment_4_0()); }
(rule__SubtractionOperator__LiteralAssignment_4_0)
{ after(grammarAccess.getSubtractionOperatorAccess().getLiteralAssignment_4_0()); }
)

    |(
{ before(grammarAccess.getSubtractionOperatorAccess().getStreamElementsAssignment_4_1()); }
(rule__SubtractionOperator__StreamElementsAssignment_4_1)
{ after(grammarAccess.getSubtractionOperatorAccess().getStreamElementsAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicationOperator__Alternatives_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicationOperatorAccess().getLiteralAssignment_4_0()); }
(rule__MultiplicationOperator__LiteralAssignment_4_0)
{ after(grammarAccess.getMultiplicationOperatorAccess().getLiteralAssignment_4_0()); }
)

    |(
{ before(grammarAccess.getMultiplicationOperatorAccess().getStreamElementsAssignment_4_1()); }
(rule__MultiplicationOperator__StreamElementsAssignment_4_1)
{ after(grammarAccess.getMultiplicationOperatorAccess().getStreamElementsAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DivisionOperator__Alternatives_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDivisionOperatorAccess().getLiteralAssignment_4_0()); }
(rule__DivisionOperator__LiteralAssignment_4_0)
{ after(grammarAccess.getDivisionOperatorAccess().getLiteralAssignment_4_0()); }
)

    |(
{ before(grammarAccess.getDivisionOperatorAccess().getStreamElementsAssignment_4_1()); }
(rule__DivisionOperator__StreamElementsAssignment_4_1)
{ after(grammarAccess.getDivisionOperatorAccess().getStreamElementsAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDefinition__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDefinitionAccess().getNumberVariableDefinitionParserRuleCall_0()); }
	ruleNumberVariableDefinition
{ after(grammarAccess.getVariableDefinitionAccess().getNumberVariableDefinitionParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getVariableDefinitionAccess().getStringVariableDefinitionParserRuleCall_1()); }
	ruleStringVariableDefinition
{ after(grammarAccess.getVariableDefinitionAccess().getStringVariableDefinitionParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getVariableDefinitionAccess().getBooleanVariableDefinitionParserRuleCall_2()); }
	ruleBooleanVariableDefinition
{ after(grammarAccess.getVariableDefinitionAccess().getBooleanVariableDefinitionParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StreamElement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStreamElementAccess().getStructureElementsParserRuleCall_0()); }
	ruleStructureElements
{ after(grammarAccess.getStreamElementAccess().getStructureElementsParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getStreamElementAccess().getVariableDeclarationParserRuleCall_1()); }
	ruleVariableDeclaration
{ after(grammarAccess.getStreamElementAccess().getVariableDeclarationParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__OperatorAlternatives_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExpressionAccess().getOperatorEqualsSignEqualsSignKeyword_1_1_0_0()); }

	'==' 

{ after(grammarAccess.getRelationalExpressionAccess().getOperatorEqualsSignEqualsSignKeyword_1_1_0_0()); }
)

    |(
{ before(grammarAccess.getRelationalExpressionAccess().getOperatorExclamationMarkEqualsSignKeyword_1_1_0_1()); }

	'!=' 

{ after(grammarAccess.getRelationalExpressionAccess().getOperatorExclamationMarkEqualsSignKeyword_1_1_0_1()); }
)

    |(
{ before(grammarAccess.getRelationalExpressionAccess().getOperatorGreaterThanSignEqualsSignKeyword_1_1_0_2()); }

	'>=' 

{ after(grammarAccess.getRelationalExpressionAccess().getOperatorGreaterThanSignEqualsSignKeyword_1_1_0_2()); }
)

    |(
{ before(grammarAccess.getRelationalExpressionAccess().getOperatorLessThanSignEqualsSignKeyword_1_1_0_3()); }

	'<=' 

{ after(grammarAccess.getRelationalExpressionAccess().getOperatorLessThanSignEqualsSignKeyword_1_1_0_3()); }
)

    |(
{ before(grammarAccess.getRelationalExpressionAccess().getOperatorGreaterThanSignKeyword_1_1_0_4()); }

	'>' 

{ after(grammarAccess.getRelationalExpressionAccess().getOperatorGreaterThanSignKeyword_1_1_0_4()); }
)

    |(
{ before(grammarAccess.getRelationalExpressionAccess().getOperatorLessThanSignKeyword_1_1_0_5()); }

	'<' 

{ after(grammarAccess.getRelationalExpressionAccess().getOperatorLessThanSignKeyword_1_1_0_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Alternatives_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionAccess().getGroup_1_0_0()); }
(rule__Addition__Group_1_0_0__0)
{ after(grammarAccess.getAdditionAccess().getGroup_1_0_0()); }
)

    |(
{ before(grammarAccess.getAdditionAccess().getGroup_1_0_1()); }
(rule__Addition__Group_1_0_1__0)
{ after(grammarAccess.getAdditionAccess().getGroup_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Alternatives_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicationAccess().getGroup_1_0_0()); }
(rule__Multiplication__Group_1_0_0__0)
{ after(grammarAccess.getMultiplicationAccess().getGroup_1_0_0()); }
)

    |(
{ before(grammarAccess.getMultiplicationAccess().getGroup_1_0_1()); }
(rule__Multiplication__Group_1_0_1__0)
{ after(grammarAccess.getMultiplicationAccess().getGroup_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getGroup_0()); }
(rule__PrimaryExpression__Group_0__0)
{ after(grammarAccess.getPrimaryExpressionAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getGroup_1()); }
(rule__PrimaryExpression__Group_1__0)
{ after(grammarAccess.getPrimaryExpressionAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getGroup_2()); }
(rule__PrimaryExpression__Group_2__0)
{ after(grammarAccess.getPrimaryExpressionAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getGroup_3()); }
(rule__PrimaryExpression__Group_3__0)
{ after(grammarAccess.getPrimaryExpressionAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeAccess().getSimpleDataTypeParserRuleCall_0()); }
	ruleSimpleDataType
{ after(grammarAccess.getDataTypeAccess().getSimpleDataTypeParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getDataTypeAccess().getComplexDataTypeParserRuleCall_1()); }
	ruleComplexDataType
{ after(grammarAccess.getDataTypeAccess().getComplexDataTypeParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleDataType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleDataTypeAccess().getIntegerDataTypeParserRuleCall_0()); }
	ruleIntegerDataType
{ after(grammarAccess.getSimpleDataTypeAccess().getIntegerDataTypeParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getSimpleDataTypeAccess().getFloatDataTypeParserRuleCall_1()); }
	ruleFloatDataType
{ after(grammarAccess.getSimpleDataTypeAccess().getFloatDataTypeParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getSimpleDataTypeAccess().getBooleanDataTypeParserRuleCall_2()); }
	ruleBooleanDataType
{ after(grammarAccess.getSimpleDataTypeAccess().getBooleanDataTypeParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SparqlQueryType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSparqlQueryTypeAccess().getSELECTEnumLiteralDeclaration_0()); }
(	'SELECT' 
)
{ after(grammarAccess.getSparqlQueryTypeAccess().getSELECTEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getSparqlQueryTypeAccess().getCONSTRUCTEnumLiteralDeclaration_1()); }
(	'CONSTRUCT' 
)
{ after(grammarAccess.getSparqlQueryTypeAccess().getCONSTRUCTEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getSparqlQueryTypeAccess().getASKEnumLiteralDeclaration_2()); }
(	'ASK' 
)
{ after(grammarAccess.getSparqlQueryTypeAccess().getASKEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getSparqlQueryTypeAccess().getDESCRIBEEnumLiteralDeclaration_3()); }
(	'DESCRIBE' 
)
{ after(grammarAccess.getSparqlQueryTypeAccess().getDESCRIBEEnumLiteralDeclaration_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__PackageDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PackageDeclaration__Group__0__Impl
	rule__PackageDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageDeclarationAccess().getPackageKeyword_0()); }

	'package' 

{ after(grammarAccess.getPackageDeclarationAccess().getPackageKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PackageDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PackageDeclaration__Group__1__Impl
	rule__PackageDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageDeclarationAccess().getNameAssignment_1()); }
(rule__PackageDeclaration__NameAssignment_1)
{ after(grammarAccess.getPackageDeclarationAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PackageDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PackageDeclaration__Group__2__Impl
	rule__PackageDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageDeclarationAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getPackageDeclarationAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PackageDeclaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PackageDeclaration__Group__3__Impl
	rule__PackageDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageDeclarationAccess().getElementsAssignment_3()); }
(rule__PackageDeclaration__ElementsAssignment_3)*
{ after(grammarAccess.getPackageDeclarationAccess().getElementsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PackageDeclaration__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PackageDeclaration__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageDeclarationAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getPackageDeclarationAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Import__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import__Group__0__Impl
	rule__Import__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportKeyword_0()); }

	'import' 

{ after(grammarAccess.getImportAccess().getImportKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Import__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportURIAssignment_1()); }
(rule__Import__ImportURIAssignment_1)
{ after(grammarAccess.getImportAccess().getImportURIAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__StreamStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StreamStatement__Group__0__Impl
	rule__StreamStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StreamStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStreamStatementAccess().getReturnStreamAssignment_0()); }
(rule__StreamStatement__ReturnStreamAssignment_0)
{ after(grammarAccess.getStreamStatementAccess().getReturnStreamAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StreamStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StreamStatement__Group__1__Impl
	rule__StreamStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StreamStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStreamStatementAccess().getGroup_1()); }
(rule__StreamStatement__Group_1__0)*
{ after(grammarAccess.getStreamStatementAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StreamStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StreamStatement__Group__2__Impl
	rule__StreamStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StreamStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStreamStatementAccess().getEqualsSignKeyword_2()); }

	'=' 

{ after(grammarAccess.getStreamStatementAccess().getEqualsSignKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StreamStatement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StreamStatement__Group__3__Impl
	rule__StreamStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__StreamStatement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStreamStatementAccess().getOperatorAssignment_3()); }
(rule__StreamStatement__OperatorAssignment_3)
{ after(grammarAccess.getStreamStatementAccess().getOperatorAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StreamStatement__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StreamStatement__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StreamStatement__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStreamStatementAccess().getSemicolonKeyword_4()); }

	';' 

{ after(grammarAccess.getStreamStatementAccess().getSemicolonKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__StreamStatement__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StreamStatement__Group_1__0__Impl
	rule__StreamStatement__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StreamStatement__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStreamStatementAccess().getCommaKeyword_1_0()); }

	',' 

{ after(grammarAccess.getStreamStatementAccess().getCommaKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StreamStatement__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StreamStatement__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StreamStatement__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStreamStatementAccess().getReturnStreamAssignment_1_1()); }
(rule__StreamStatement__ReturnStreamAssignment_1_1)
{ after(grammarAccess.getStreamStatementAccess().getReturnStreamAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__StreamAccess__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StreamAccess__Group__0__Impl
	rule__StreamAccess__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StreamAccess__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStreamAccessAccess().getReferenceAssignment_0()); }
(rule__StreamAccess__ReferenceAssignment_0)
{ after(grammarAccess.getStreamAccessAccess().getReferenceAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StreamAccess__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StreamAccess__Group__1__Impl
	rule__StreamAccess__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StreamAccess__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStreamAccessAccess().getFullStopKeyword_1()); }

	'.' 

{ after(grammarAccess.getStreamAccessAccess().getFullStopKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StreamAccess__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StreamAccess__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StreamAccess__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStreamAccessAccess().getElementAssignment_2()); }
(rule__StreamAccess__ElementAssignment_2)
{ after(grammarAccess.getStreamAccessAccess().getElementAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}









rule__StreamDefinition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StreamDefinition__Group__0__Impl
	rule__StreamDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StreamDefinition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStreamDefinitionAccess().getReferenceAssignment_0()); }
(rule__StreamDefinition__ReferenceAssignment_0)
{ after(grammarAccess.getStreamDefinitionAccess().getReferenceAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StreamDefinition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StreamDefinition__Group__1__Impl
	rule__StreamDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StreamDefinition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStreamDefinitionAccess().getNameAssignment_1()); }
(rule__StreamDefinition__NameAssignment_1)
{ after(grammarAccess.getStreamDefinitionAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StreamDefinition__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StreamDefinition__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StreamDefinition__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStreamDefinitionAccess().getSemicolonKeyword_2()); }

	';' 

{ after(grammarAccess.getStreamDefinitionAccess().getSemicolonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__JoinOperator__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JoinOperator__Group__0__Impl
	rule__JoinOperator__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinOperator__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJoinOperatorAccess().getJoinKeyword_0()); }

	'join' 

{ after(grammarAccess.getJoinOperatorAccess().getJoinKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JoinOperator__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JoinOperator__Group__1__Impl
	rule__JoinOperator__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinOperator__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJoinOperatorAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getJoinOperatorAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JoinOperator__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JoinOperator__Group__2__Impl
	rule__JoinOperator__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinOperator__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJoinOperatorAccess().getParametersAssignment_2()); }
(rule__JoinOperator__ParametersAssignment_2)
{ after(grammarAccess.getJoinOperatorAccess().getParametersAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JoinOperator__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JoinOperator__Group__3__Impl
	rule__JoinOperator__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinOperator__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJoinOperatorAccess().getCommaKeyword_3()); }

	',' 

{ after(grammarAccess.getJoinOperatorAccess().getCommaKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JoinOperator__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JoinOperator__Group__4__Impl
	rule__JoinOperator__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinOperator__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJoinOperatorAccess().getParametersAssignment_4()); }
(rule__JoinOperator__ParametersAssignment_4)
{ after(grammarAccess.getJoinOperatorAccess().getParametersAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JoinOperator__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JoinOperator__Group__5__Impl
	rule__JoinOperator__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinOperator__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJoinOperatorAccess().getGroup_5()); }
(rule__JoinOperator__Group_5__0)*
{ after(grammarAccess.getJoinOperatorAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JoinOperator__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JoinOperator__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinOperator__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJoinOperatorAccess().getRightParenthesisKeyword_6()); }

	')' 

{ after(grammarAccess.getJoinOperatorAccess().getRightParenthesisKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__JoinOperator__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JoinOperator__Group_5__0__Impl
	rule__JoinOperator__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinOperator__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJoinOperatorAccess().getCommaKeyword_5_0()); }

	',' 

{ after(grammarAccess.getJoinOperatorAccess().getCommaKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JoinOperator__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JoinOperator__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinOperator__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJoinOperatorAccess().getParametersAssignment_5_1()); }
(rule__JoinOperator__ParametersAssignment_5_1)
{ after(grammarAccess.getJoinOperatorAccess().getParametersAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__StreamOperatorParameter__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StreamOperatorParameter__Group__0__Impl
	rule__StreamOperatorParameter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StreamOperatorParameter__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStreamOperatorParameterAccess().getStreamAssignment_0()); }
(rule__StreamOperatorParameter__StreamAssignment_0)
{ after(grammarAccess.getStreamOperatorParameterAccess().getStreamAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StreamOperatorParameter__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StreamOperatorParameter__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StreamOperatorParameter__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStreamOperatorParameterAccess().getGroup_1()); }
(rule__StreamOperatorParameter__Group_1__0)?
{ after(grammarAccess.getStreamOperatorParameterAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__StreamOperatorParameter__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StreamOperatorParameter__Group_1__0__Impl
	rule__StreamOperatorParameter__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StreamOperatorParameter__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStreamOperatorParameterAccess().getLeftSquareBracketKeyword_1_0()); }

	'[' 

{ after(grammarAccess.getStreamOperatorParameterAccess().getLeftSquareBracketKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StreamOperatorParameter__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StreamOperatorParameter__Group_1__1__Impl
	rule__StreamOperatorParameter__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StreamOperatorParameter__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStreamOperatorParameterAccess().getBarrierAssignment_1_1()); }
(rule__StreamOperatorParameter__BarrierAssignment_1_1)
{ after(grammarAccess.getStreamOperatorParameterAccess().getBarrierAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StreamOperatorParameter__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StreamOperatorParameter__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StreamOperatorParameter__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStreamOperatorParameterAccess().getRightSquareBracketKeyword_1_2()); }

	']' 

{ after(grammarAccess.getStreamOperatorParameterAccess().getRightSquareBracketKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ElementJoinOperator__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ElementJoinOperator__Group__0__Impl
	rule__ElementJoinOperator__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementJoinOperator__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementJoinOperatorAccess().getEjoinKeyword_0()); }

	'ejoin' 

{ after(grammarAccess.getElementJoinOperatorAccess().getEjoinKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ElementJoinOperator__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ElementJoinOperator__Group__1__Impl
	rule__ElementJoinOperator__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementJoinOperator__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementJoinOperatorAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getElementJoinOperatorAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ElementJoinOperator__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ElementJoinOperator__Group__2__Impl
	rule__ElementJoinOperator__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementJoinOperator__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementJoinOperatorAccess().getAlternatives_2()); }
(rule__ElementJoinOperator__Alternatives_2)
{ after(grammarAccess.getElementJoinOperatorAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ElementJoinOperator__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ElementJoinOperator__Group__3__Impl
	rule__ElementJoinOperator__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementJoinOperator__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementJoinOperatorAccess().getGroup_3()); }
(rule__ElementJoinOperator__Group_3__0)*
{ after(grammarAccess.getElementJoinOperatorAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ElementJoinOperator__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ElementJoinOperator__Group__4__Impl
	rule__ElementJoinOperator__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementJoinOperator__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementJoinOperatorAccess().getGroup_4()); }
(rule__ElementJoinOperator__Group_4__0)*
{ after(grammarAccess.getElementJoinOperatorAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ElementJoinOperator__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ElementJoinOperator__Group__5__Impl
	rule__ElementJoinOperator__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementJoinOperator__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementJoinOperatorAccess().getCommaKeyword_5()); }

	',' 

{ after(grammarAccess.getElementJoinOperatorAccess().getCommaKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ElementJoinOperator__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ElementJoinOperator__Group__6__Impl
	rule__ElementJoinOperator__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementJoinOperator__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementJoinOperatorAccess().getParameterAssignment_6()); }
(rule__ElementJoinOperator__ParameterAssignment_6)
{ after(grammarAccess.getElementJoinOperatorAccess().getParameterAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ElementJoinOperator__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ElementJoinOperator__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementJoinOperator__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementJoinOperatorAccess().getRightParenthesisKeyword_7()); }

	')' 

{ after(grammarAccess.getElementJoinOperatorAccess().getRightParenthesisKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__ElementJoinOperator__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ElementJoinOperator__Group_3__0__Impl
	rule__ElementJoinOperator__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementJoinOperator__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementJoinOperatorAccess().getCommaKeyword_3_0()); }

	',' 

{ after(grammarAccess.getElementJoinOperatorAccess().getCommaKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ElementJoinOperator__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ElementJoinOperator__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementJoinOperator__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementJoinOperatorAccess().getElementParametersAssignment_3_1()); }
(rule__ElementJoinOperator__ElementParametersAssignment_3_1)
{ after(grammarAccess.getElementJoinOperatorAccess().getElementParametersAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ElementJoinOperator__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ElementJoinOperator__Group_4__0__Impl
	rule__ElementJoinOperator__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementJoinOperator__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementJoinOperatorAccess().getCommaKeyword_4_0()); }

	',' 

{ after(grammarAccess.getElementJoinOperatorAccess().getCommaKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ElementJoinOperator__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ElementJoinOperator__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementJoinOperator__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementJoinOperatorAccess().getVariableElementParametersAssignment_4_1()); }
(rule__ElementJoinOperator__VariableElementParametersAssignment_4_1)
{ after(grammarAccess.getElementJoinOperatorAccess().getVariableElementParametersAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FilterOperator__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FilterOperator__Group__0__Impl
	rule__FilterOperator__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FilterOperator__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFilterOperatorAccess().getFilterKeyword_0()); }

	'filter' 

{ after(grammarAccess.getFilterOperatorAccess().getFilterKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FilterOperator__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FilterOperator__Group__1__Impl
	rule__FilterOperator__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FilterOperator__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFilterOperatorAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getFilterOperatorAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FilterOperator__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FilterOperator__Group__2__Impl
	rule__FilterOperator__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FilterOperator__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFilterOperatorAccess().getExpressionAssignment_2()); }
(rule__FilterOperator__ExpressionAssignment_2)
{ after(grammarAccess.getFilterOperatorAccess().getExpressionAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FilterOperator__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FilterOperator__Group__3__Impl
	rule__FilterOperator__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FilterOperator__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFilterOperatorAccess().getGroup_3()); }
(rule__FilterOperator__Group_3__0)*
{ after(grammarAccess.getFilterOperatorAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FilterOperator__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FilterOperator__Group__4__Impl
	rule__FilterOperator__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__FilterOperator__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFilterOperatorAccess().getCommaKeyword_4()); }

	',' 

{ after(grammarAccess.getFilterOperatorAccess().getCommaKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FilterOperator__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FilterOperator__Group__5__Impl
	rule__FilterOperator__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__FilterOperator__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFilterOperatorAccess().getStreamAssignment_5()); }
(rule__FilterOperator__StreamAssignment_5)
{ after(grammarAccess.getFilterOperatorAccess().getStreamAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FilterOperator__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FilterOperator__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FilterOperator__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFilterOperatorAccess().getRightParenthesisKeyword_6()); }

	')' 

{ after(grammarAccess.getFilterOperatorAccess().getRightParenthesisKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__FilterOperator__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FilterOperator__Group_3__0__Impl
	rule__FilterOperator__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FilterOperator__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFilterOperatorAccess().getCommaKeyword_3_0()); }

	',' 

{ after(grammarAccess.getFilterOperatorAccess().getCommaKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FilterOperator__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FilterOperator__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FilterOperator__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFilterOperatorAccess().getExpressionAssignment_3_1()); }
(rule__FilterOperator__ExpressionAssignment_3_1)
{ after(grammarAccess.getFilterOperatorAccess().getExpressionAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SplitOperator__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SplitOperator__Group__0__Impl
	rule__SplitOperator__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SplitOperator__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSplitOperatorAccess().getSplitKeyword_0()); }

	'split' 

{ after(grammarAccess.getSplitOperatorAccess().getSplitKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SplitOperator__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SplitOperator__Group__1__Impl
	rule__SplitOperator__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SplitOperator__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSplitOperatorAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getSplitOperatorAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SplitOperator__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SplitOperator__Group__2__Impl
	rule__SplitOperator__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SplitOperator__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSplitOperatorAccess().getParameterAssignment_2()); }
(rule__SplitOperator__ParameterAssignment_2)
{ after(grammarAccess.getSplitOperatorAccess().getParameterAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SplitOperator__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SplitOperator__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SplitOperator__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSplitOperatorAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getSplitOperatorAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__MatchOperator__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MatchOperator__Group__0__Impl
	rule__MatchOperator__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MatchOperator__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMatchOperatorAccess().getMatchKeyword_0()); }

	'match' 

{ after(grammarAccess.getMatchOperatorAccess().getMatchKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MatchOperator__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MatchOperator__Group__1__Impl
	rule__MatchOperator__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MatchOperator__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMatchOperatorAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getMatchOperatorAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MatchOperator__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MatchOperator__Group__2__Impl
	rule__MatchOperator__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MatchOperator__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMatchOperatorAccess().getExpressionAssignment_2()); }
(rule__MatchOperator__ExpressionAssignment_2)
{ after(grammarAccess.getMatchOperatorAccess().getExpressionAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MatchOperator__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MatchOperator__Group__3__Impl
	rule__MatchOperator__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MatchOperator__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMatchOperatorAccess().getCommaKeyword_3()); }

	',' 

{ after(grammarAccess.getMatchOperatorAccess().getCommaKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MatchOperator__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MatchOperator__Group__4__Impl
	rule__MatchOperator__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__MatchOperator__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMatchOperatorAccess().getCalculationAssignment_4()); }
(rule__MatchOperator__CalculationAssignment_4)
{ after(grammarAccess.getMatchOperatorAccess().getCalculationAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MatchOperator__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MatchOperator__Group__5__Impl
	rule__MatchOperator__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__MatchOperator__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMatchOperatorAccess().getCommaKeyword_5()); }

	',' 

{ after(grammarAccess.getMatchOperatorAccess().getCommaKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MatchOperator__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MatchOperator__Group__6__Impl
	rule__MatchOperator__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__MatchOperator__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMatchOperatorAccess().getStreamAssignment_6()); }
(rule__MatchOperator__StreamAssignment_6)
{ after(grammarAccess.getMatchOperatorAccess().getStreamAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MatchOperator__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MatchOperator__Group__7__Impl
	rule__MatchOperator__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__MatchOperator__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMatchOperatorAccess().getGroup_7()); }
(rule__MatchOperator__Group_7__0)*
{ after(grammarAccess.getMatchOperatorAccess().getGroup_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MatchOperator__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MatchOperator__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MatchOperator__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMatchOperatorAccess().getRightParenthesisKeyword_8()); }

	')' 

{ after(grammarAccess.getMatchOperatorAccess().getRightParenthesisKeyword_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}




















rule__MatchOperator__Group_7__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MatchOperator__Group_7__0__Impl
	rule__MatchOperator__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MatchOperator__Group_7__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMatchOperatorAccess().getCommaKeyword_7_0()); }

	',' 

{ after(grammarAccess.getMatchOperatorAccess().getCommaKeyword_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MatchOperator__Group_7__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MatchOperator__Group_7__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MatchOperator__Group_7__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMatchOperatorAccess().getStreamAssignment_7_1()); }
(rule__MatchOperator__StreamAssignment_7_1)
{ after(grammarAccess.getMatchOperatorAccess().getStreamAssignment_7_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__InputOperator__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InputOperator__Group__0__Impl
	rule__InputOperator__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InputOperator__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInputOperatorAccess().getInKeyword_0()); }

	'in' 

{ after(grammarAccess.getInputOperatorAccess().getInKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InputOperator__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InputOperator__Group__1__Impl
	rule__InputOperator__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InputOperator__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInputOperatorAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getInputOperatorAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InputOperator__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InputOperator__Group__2__Impl
	rule__InputOperator__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__InputOperator__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInputOperatorAccess().getIriAssignment_2()); }
(rule__InputOperator__IriAssignment_2)
{ after(grammarAccess.getInputOperatorAccess().getIriAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InputOperator__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InputOperator__Group__3__Impl
	rule__InputOperator__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__InputOperator__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInputOperatorAccess().getGroup_3()); }
(rule__InputOperator__Group_3__0)*
{ after(grammarAccess.getInputOperatorAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InputOperator__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InputOperator__Group__4__Impl
	rule__InputOperator__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__InputOperator__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInputOperatorAccess().getCommaKeyword_4()); }

	',' 

{ after(grammarAccess.getInputOperatorAccess().getCommaKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InputOperator__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InputOperator__Group__5__Impl
	rule__InputOperator__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__InputOperator__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInputOperatorAccess().getAddressAssignment_5()); }
(rule__InputOperator__AddressAssignment_5)
{ after(grammarAccess.getInputOperatorAccess().getAddressAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InputOperator__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InputOperator__Group__6__Impl
	rule__InputOperator__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__InputOperator__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInputOperatorAccess().getCommaKeyword_6()); }

	',' 

{ after(grammarAccess.getInputOperatorAccess().getCommaKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InputOperator__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InputOperator__Group__7__Impl
	rule__InputOperator__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__InputOperator__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInputOperatorAccess().getPortAssignment_7()); }
(rule__InputOperator__PortAssignment_7)
{ after(grammarAccess.getInputOperatorAccess().getPortAssignment_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InputOperator__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InputOperator__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InputOperator__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInputOperatorAccess().getRightParenthesisKeyword_8()); }

	')' 

{ after(grammarAccess.getInputOperatorAccess().getRightParenthesisKeyword_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}




















rule__InputOperator__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InputOperator__Group_3__0__Impl
	rule__InputOperator__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InputOperator__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInputOperatorAccess().getCommaKeyword_3_0()); }

	',' 

{ after(grammarAccess.getInputOperatorAccess().getCommaKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InputOperator__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InputOperator__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InputOperator__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInputOperatorAccess().getIriAssignment_3_1()); }
(rule__InputOperator__IriAssignment_3_1)
{ after(grammarAccess.getInputOperatorAccess().getIriAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TagOperator__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TagOperator__Group__0__Impl
	rule__TagOperator__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TagOperator__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTagOperatorAccess().getTagKeyword_0()); }

	'tag' 

{ after(grammarAccess.getTagOperatorAccess().getTagKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TagOperator__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TagOperator__Group__1__Impl
	rule__TagOperator__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TagOperator__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTagOperatorAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getTagOperatorAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TagOperator__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TagOperator__Group__2__Impl
	rule__TagOperator__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TagOperator__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTagOperatorAccess().getParametersAssignment_2()); }
(rule__TagOperator__ParametersAssignment_2)
{ after(grammarAccess.getTagOperatorAccess().getParametersAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TagOperator__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TagOperator__Group__3__Impl
	rule__TagOperator__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TagOperator__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTagOperatorAccess().getGroup_3()); }
(rule__TagOperator__Group_3__0)*
{ after(grammarAccess.getTagOperatorAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TagOperator__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TagOperator__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TagOperator__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTagOperatorAccess().getRightParenthesisKeyword_4()); }

	')' 

{ after(grammarAccess.getTagOperatorAccess().getRightParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__TagOperator__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TagOperator__Group_3__0__Impl
	rule__TagOperator__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TagOperator__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTagOperatorAccess().getCommaKeyword_3_0()); }

	',' 

{ after(grammarAccess.getTagOperatorAccess().getCommaKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TagOperator__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TagOperator__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TagOperator__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTagOperatorAccess().getParametersAssignment_3_1()); }
(rule__TagOperator__ParametersAssignment_3_1)
{ after(grammarAccess.getTagOperatorAccess().getParametersAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__QueryTagOperator__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QueryTagOperator__Group__0__Impl
	rule__QueryTagOperator__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryTagOperator__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQueryTagOperatorAccess().getLeftCurlyBracketKeyword_0()); }

	'{' 

{ after(grammarAccess.getQueryTagOperatorAccess().getLeftCurlyBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QueryTagOperator__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QueryTagOperator__Group__1__Impl
	rule__QueryTagOperator__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryTagOperator__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQueryTagOperatorAccess().getQueryTypeAssignment_1()); }
(rule__QueryTagOperator__QueryTypeAssignment_1)
{ after(grammarAccess.getQueryTagOperatorAccess().getQueryTypeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QueryTagOperator__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QueryTagOperator__Group__2__Impl
	rule__QueryTagOperator__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryTagOperator__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQueryTagOperatorAccess().getQueryAssignment_2()); }
(rule__QueryTagOperator__QueryAssignment_2)
{ after(grammarAccess.getQueryTagOperatorAccess().getQueryAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QueryTagOperator__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QueryTagOperator__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryTagOperator__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQueryTagOperatorAccess().getRightCurlyBracketKeyword_3()); }

	'}' 

{ after(grammarAccess.getQueryTagOperatorAccess().getRightCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__SparqlQuery__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SparqlQuery__Group__0__Impl
	rule__SparqlQuery__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SparqlQuery__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSparqlQueryAccess().getVariableAssignment_0()); }
(rule__SparqlQuery__VariableAssignment_0)
{ after(grammarAccess.getSparqlQueryAccess().getVariableAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SparqlQuery__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SparqlQuery__Group__1__Impl
	rule__SparqlQuery__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SparqlQuery__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSparqlQueryAccess().getWHEREKeyword_1()); }

	'WHERE' 

{ after(grammarAccess.getSparqlQueryAccess().getWHEREKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SparqlQuery__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SparqlQuery__Group__2__Impl
	rule__SparqlQuery__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SparqlQuery__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSparqlQueryAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getSparqlQueryAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SparqlQuery__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SparqlQuery__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SparqlQuery__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSparqlQueryAccess().getRightCurlyBracketKeyword_3()); }

	'}' 

{ after(grammarAccess.getSparqlQueryAccess().getRightCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__SparqlQueryVariable__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SparqlQueryVariable__Group__0__Impl
	rule__SparqlQueryVariable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SparqlQueryVariable__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSparqlQueryVariableAccess().getQuestionMarkKeyword_0()); }

	'?' 

{ after(grammarAccess.getSparqlQueryVariableAccess().getQuestionMarkKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SparqlQueryVariable__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SparqlQueryVariable__Group__1__Impl
	rule__SparqlQueryVariable__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SparqlQueryVariable__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSparqlQueryVariableAccess().getVariableAssignment_1()); }
(rule__SparqlQueryVariable__VariableAssignment_1)
{ after(grammarAccess.getSparqlQueryVariableAccess().getVariableAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SparqlQueryVariable__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SparqlQueryVariable__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SparqlQueryVariable__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSparqlQueryVariableAccess().getGroup_2()); }
(rule__SparqlQueryVariable__Group_2__0)*
{ after(grammarAccess.getSparqlQueryVariableAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__SparqlQueryVariable__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SparqlQueryVariable__Group_2__0__Impl
	rule__SparqlQueryVariable__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SparqlQueryVariable__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSparqlQueryVariableAccess().getQuestionMarkKeyword_2_0()); }

	'?' 

{ after(grammarAccess.getSparqlQueryVariableAccess().getQuestionMarkKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SparqlQueryVariable__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SparqlQueryVariable__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SparqlQueryVariable__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSparqlQueryVariableAccess().getVariableAssignment_2_1()); }
(rule__SparqlQueryVariable__VariableAssignment_2_1)
{ after(grammarAccess.getSparqlQueryVariableAccess().getVariableAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__UnTagOperator__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnTagOperator__Group__0__Impl
	rule__UnTagOperator__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnTagOperator__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnTagOperatorAccess().getUntagKeyword_0()); }

	'untag' 

{ after(grammarAccess.getUnTagOperatorAccess().getUntagKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnTagOperator__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnTagOperator__Group__1__Impl
	rule__UnTagOperator__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UnTagOperator__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnTagOperatorAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getUnTagOperatorAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnTagOperator__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnTagOperator__Group__2__Impl
	rule__UnTagOperator__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__UnTagOperator__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnTagOperatorAccess().getParametersAssignment_2()); }
(rule__UnTagOperator__ParametersAssignment_2)
{ after(grammarAccess.getUnTagOperatorAccess().getParametersAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnTagOperator__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnTagOperator__Group__3__Impl
	rule__UnTagOperator__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__UnTagOperator__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnTagOperatorAccess().getGroup_3()); }
(rule__UnTagOperator__Group_3__0)*
{ after(grammarAccess.getUnTagOperatorAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnTagOperator__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnTagOperator__Group__4__Impl
	rule__UnTagOperator__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__UnTagOperator__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnTagOperatorAccess().getCommaKeyword_4()); }

	',' 

{ after(grammarAccess.getUnTagOperatorAccess().getCommaKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnTagOperator__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnTagOperator__Group__5__Impl
	rule__UnTagOperator__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__UnTagOperator__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnTagOperatorAccess().getStreamAssignment_5()); }
(rule__UnTagOperator__StreamAssignment_5)
{ after(grammarAccess.getUnTagOperatorAccess().getStreamAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnTagOperator__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnTagOperator__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnTagOperator__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnTagOperatorAccess().getRightParenthesisKeyword_6()); }

	')' 

{ after(grammarAccess.getUnTagOperatorAccess().getRightParenthesisKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__UnTagOperator__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnTagOperator__Group_3__0__Impl
	rule__UnTagOperator__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnTagOperator__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnTagOperatorAccess().getCommaKeyword_3_0()); }

	',' 

{ after(grammarAccess.getUnTagOperatorAccess().getCommaKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnTagOperator__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnTagOperator__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnTagOperator__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnTagOperatorAccess().getParametersAssignment_3_1()); }
(rule__UnTagOperator__ParametersAssignment_3_1)
{ after(grammarAccess.getUnTagOperatorAccess().getParametersAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__UnTagElement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnTagElement__Group__0__Impl
	rule__UnTagElement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnTagElement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnTagElementAccess().getElementAssignment_0()); }
(rule__UnTagElement__ElementAssignment_0)
{ after(grammarAccess.getUnTagElementAccess().getElementAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnTagElement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnTagElement__Group__1__Impl
	rule__UnTagElement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UnTagElement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnTagElementAccess().getIsKeyword_1()); }

	'is' 

{ after(grammarAccess.getUnTagElementAccess().getIsKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnTagElement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnTagElement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnTagElement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnTagElementAccess().getReferenceAssignment_2()); }
(rule__UnTagElement__ReferenceAssignment_2)
{ after(grammarAccess.getUnTagElementAccess().getReferenceAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__TagClassElement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TagClassElement__Group__0__Impl
	rule__TagClassElement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TagClassElement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTagClassElementAccess().getReferenceAssignment_0()); }
(rule__TagClassElement__ReferenceAssignment_0)
{ after(grammarAccess.getTagClassElementAccess().getReferenceAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TagClassElement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TagClassElement__Group__1__Impl
	rule__TagClassElement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TagClassElement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTagClassElementAccess().getIsKeyword_1()); }

	'is' 

{ after(grammarAccess.getTagClassElementAccess().getIsKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TagClassElement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TagClassElement__Group__2__Impl
	rule__TagClassElement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TagClassElement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTagClassElementAccess().getClassKeyword_2()); }

	'class' 

{ after(grammarAccess.getTagClassElementAccess().getClassKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TagClassElement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TagClassElement__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TagClassElement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTagClassElementAccess().getElementAssignment_3()); }
(rule__TagClassElement__ElementAssignment_3)
{ after(grammarAccess.getTagClassElementAccess().getElementAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__TagObjectPropertyElement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TagObjectPropertyElement__Group__0__Impl
	rule__TagObjectPropertyElement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TagObjectPropertyElement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTagObjectPropertyElementAccess().getReferenceAssignment_0()); }
(rule__TagObjectPropertyElement__ReferenceAssignment_0)
{ after(grammarAccess.getTagObjectPropertyElementAccess().getReferenceAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TagObjectPropertyElement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TagObjectPropertyElement__Group__1__Impl
	rule__TagObjectPropertyElement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TagObjectPropertyElement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTagObjectPropertyElementAccess().getIsKeyword_1()); }

	'is' 

{ after(grammarAccess.getTagObjectPropertyElementAccess().getIsKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TagObjectPropertyElement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TagObjectPropertyElement__Group__2__Impl
	rule__TagObjectPropertyElement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TagObjectPropertyElement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTagObjectPropertyElementAccess().getObjectpropertyKeyword_2()); }

	'objectproperty' 

{ after(grammarAccess.getTagObjectPropertyElementAccess().getObjectpropertyKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TagObjectPropertyElement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TagObjectPropertyElement__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TagObjectPropertyElement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTagObjectPropertyElementAccess().getElementAssignment_3()); }
(rule__TagObjectPropertyElement__ElementAssignment_3)
{ after(grammarAccess.getTagObjectPropertyElementAccess().getElementAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__TagDataTypePropertyElement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TagDataTypePropertyElement__Group__0__Impl
	rule__TagDataTypePropertyElement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TagDataTypePropertyElement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTagDataTypePropertyElementAccess().getReferenceAssignment_0()); }
(rule__TagDataTypePropertyElement__ReferenceAssignment_0)
{ after(grammarAccess.getTagDataTypePropertyElementAccess().getReferenceAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TagDataTypePropertyElement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TagDataTypePropertyElement__Group__1__Impl
	rule__TagDataTypePropertyElement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TagDataTypePropertyElement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTagDataTypePropertyElementAccess().getIsKeyword_1()); }

	'is' 

{ after(grammarAccess.getTagDataTypePropertyElementAccess().getIsKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TagDataTypePropertyElement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TagDataTypePropertyElement__Group__2__Impl
	rule__TagDataTypePropertyElement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TagDataTypePropertyElement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTagDataTypePropertyElementAccess().getDatatypeKeyword_2()); }

	'datatype' 

{ after(grammarAccess.getTagDataTypePropertyElementAccess().getDatatypeKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TagDataTypePropertyElement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TagDataTypePropertyElement__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TagDataTypePropertyElement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTagDataTypePropertyElementAccess().getElementAssignment_3()); }
(rule__TagDataTypePropertyElement__ElementAssignment_3)
{ after(grammarAccess.getTagDataTypePropertyElementAccess().getElementAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__WindowOperator__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WindowOperator__Group_0__0__Impl
	rule__WindowOperator__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WindowOperator__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWindowOperatorAccess().getSettingAssignment_0_0()); }
(rule__WindowOperator__SettingAssignment_0_0)
{ after(grammarAccess.getWindowOperatorAccess().getSettingAssignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WindowOperator__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WindowOperator__Group_0__1__Impl
	rule__WindowOperator__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__WindowOperator__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWindowOperatorAccess().getValueAssignment_0_1()); }
(rule__WindowOperator__ValueAssignment_0_1)
{ after(grammarAccess.getWindowOperatorAccess().getValueAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WindowOperator__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WindowOperator__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WindowOperator__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWindowOperatorAccess().getUnitAssignment_0_2()); }
(rule__WindowOperator__UnitAssignment_0_2)?
{ after(grammarAccess.getWindowOperatorAccess().getUnitAssignment_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__MarkerOperator__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MarkerOperator__Group__0__Impl
	rule__MarkerOperator__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MarkerOperator__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMarkerOperatorAccess().getMarkerKeyword_0()); }

	'marker' 

{ after(grammarAccess.getMarkerOperatorAccess().getMarkerKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MarkerOperator__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MarkerOperator__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MarkerOperator__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMarkerOperatorAccess().getExpressionAssignment_1()); }
(rule__MarkerOperator__ExpressionAssignment_1)
{ after(grammarAccess.getMarkerOperatorAccess().getExpressionAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SWRLOperator__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SWRLOperator__Group__0__Impl
	rule__SWRLOperator__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SWRLOperator__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSWRLOperatorAccess().getSwrlKeyword_0()); }

	'swrl' 

{ after(grammarAccess.getSWRLOperatorAccess().getSwrlKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SWRLOperator__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SWRLOperator__Group__1__Impl
	rule__SWRLOperator__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SWRLOperator__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSWRLOperatorAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getSWRLOperatorAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SWRLOperator__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SWRLOperator__Group__2__Impl
	rule__SWRLOperator__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SWRLOperator__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSWRLOperatorAccess().getRuleAssignment_2()); }
(rule__SWRLOperator__RuleAssignment_2)
{ after(grammarAccess.getSWRLOperatorAccess().getRuleAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SWRLOperator__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SWRLOperator__Group__3__Impl
	rule__SWRLOperator__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SWRLOperator__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSWRLOperatorAccess().getCommaKeyword_3()); }

	',' 

{ after(grammarAccess.getSWRLOperatorAccess().getCommaKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SWRLOperator__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SWRLOperator__Group__4__Impl
	rule__SWRLOperator__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__SWRLOperator__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSWRLOperatorAccess().getBarrierAssignment_4()); }
(rule__SWRLOperator__BarrierAssignment_4)
{ after(grammarAccess.getSWRLOperatorAccess().getBarrierAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SWRLOperator__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SWRLOperator__Group__5__Impl
	rule__SWRLOperator__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__SWRLOperator__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSWRLOperatorAccess().getGroup_5()); }
(rule__SWRLOperator__Group_5__0)*
{ after(grammarAccess.getSWRLOperatorAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SWRLOperator__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SWRLOperator__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SWRLOperator__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSWRLOperatorAccess().getRightParenthesisKeyword_6()); }

	')' 

{ after(grammarAccess.getSWRLOperatorAccess().getRightParenthesisKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__SWRLOperator__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SWRLOperator__Group_5__0__Impl
	rule__SWRLOperator__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SWRLOperator__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSWRLOperatorAccess().getCommaKeyword_5_0()); }

	',' 

{ after(grammarAccess.getSWRLOperatorAccess().getCommaKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SWRLOperator__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SWRLOperator__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SWRLOperator__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSWRLOperatorAccess().getBarrierAssignment_5_1()); }
(rule__SWRLOperator__BarrierAssignment_5_1)
{ after(grammarAccess.getSWRLOperatorAccess().getBarrierAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SWRLRule__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SWRLRule__Group__0__Impl
	rule__SWRLRule__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SWRLRule__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSWRLRuleAccess().getImpliesKeyword_0()); }

	'Implies' 

{ after(grammarAccess.getSWRLRuleAccess().getImpliesKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SWRLRule__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SWRLRule__Group__1__Impl
	rule__SWRLRule__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SWRLRule__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSWRLRuleAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getSWRLRuleAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SWRLRule__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SWRLRule__Group__2__Impl
	rule__SWRLRule__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SWRLRule__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSWRLRuleAccess().getAntecedentAssignment_2()); }
(rule__SWRLRule__AntecedentAssignment_2)
{ after(grammarAccess.getSWRLRuleAccess().getAntecedentAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SWRLRule__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SWRLRule__Group__3__Impl
	rule__SWRLRule__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SWRLRule__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSWRLRuleAccess().getCommaKeyword_3()); }

	',' 

{ after(grammarAccess.getSWRLRuleAccess().getCommaKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SWRLRule__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SWRLRule__Group__4__Impl
	rule__SWRLRule__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__SWRLRule__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSWRLRuleAccess().getConsequentAssignment_4()); }
(rule__SWRLRule__ConsequentAssignment_4)
{ after(grammarAccess.getSWRLRuleAccess().getConsequentAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SWRLRule__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SWRLRule__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SWRLRule__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSWRLRuleAccess().getRightParenthesisKeyword_5()); }

	')' 

{ after(grammarAccess.getSWRLRuleAccess().getRightParenthesisKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__AntecedentRule__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AntecedentRule__Group__0__Impl
	rule__AntecedentRule__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AntecedentRule__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAntecedentRuleAccess().getAntecedentKeyword_0()); }

	'Antecedent' 

{ after(grammarAccess.getAntecedentRuleAccess().getAntecedentKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AntecedentRule__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AntecedentRule__Group__1__Impl
	rule__AntecedentRule__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AntecedentRule__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAntecedentRuleAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getAntecedentRuleAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AntecedentRule__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AntecedentRule__Group__2__Impl
	rule__AntecedentRule__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AntecedentRule__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAntecedentRuleAccess().getAtomsAssignment_2()); }
(rule__AntecedentRule__AtomsAssignment_2)
{ after(grammarAccess.getAntecedentRuleAccess().getAtomsAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AntecedentRule__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AntecedentRule__Group__3__Impl
	rule__AntecedentRule__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AntecedentRule__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAntecedentRuleAccess().getGroup_3()); }
(rule__AntecedentRule__Group_3__0)*
{ after(grammarAccess.getAntecedentRuleAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AntecedentRule__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AntecedentRule__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AntecedentRule__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAntecedentRuleAccess().getRightParenthesisKeyword_4()); }

	')' 

{ after(grammarAccess.getAntecedentRuleAccess().getRightParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__AntecedentRule__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AntecedentRule__Group_3__0__Impl
	rule__AntecedentRule__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AntecedentRule__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAntecedentRuleAccess().getCommaKeyword_3_0()); }

	',' 

{ after(grammarAccess.getAntecedentRuleAccess().getCommaKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AntecedentRule__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AntecedentRule__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AntecedentRule__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAntecedentRuleAccess().getAtomsAssignment_3_1()); }
(rule__AntecedentRule__AtomsAssignment_3_1)
{ after(grammarAccess.getAntecedentRuleAccess().getAtomsAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ConsequentRule__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConsequentRule__Group__0__Impl
	rule__ConsequentRule__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConsequentRule__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConsequentRuleAccess().getConsequentKeyword_0()); }

	'Consequent' 

{ after(grammarAccess.getConsequentRuleAccess().getConsequentKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConsequentRule__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConsequentRule__Group__1__Impl
	rule__ConsequentRule__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConsequentRule__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConsequentRuleAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getConsequentRuleAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConsequentRule__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConsequentRule__Group__2__Impl
	rule__ConsequentRule__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ConsequentRule__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConsequentRuleAccess().getAtomsAssignment_2()); }
(rule__ConsequentRule__AtomsAssignment_2)
{ after(grammarAccess.getConsequentRuleAccess().getAtomsAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConsequentRule__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConsequentRule__Group__3__Impl
	rule__ConsequentRule__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ConsequentRule__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConsequentRuleAccess().getGroup_3()); }
(rule__ConsequentRule__Group_3__0)*
{ after(grammarAccess.getConsequentRuleAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConsequentRule__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConsequentRule__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConsequentRule__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConsequentRuleAccess().getRightParenthesisKeyword_4()); }

	')' 

{ after(grammarAccess.getConsequentRuleAccess().getRightParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__ConsequentRule__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConsequentRule__Group_3__0__Impl
	rule__ConsequentRule__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConsequentRule__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConsequentRuleAccess().getCommaKeyword_3_0()); }

	',' 

{ after(grammarAccess.getConsequentRuleAccess().getCommaKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConsequentRule__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConsequentRule__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConsequentRule__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConsequentRuleAccess().getAtomsAssignment_3_1()); }
(rule__ConsequentRule__AtomsAssignment_3_1)
{ after(grammarAccess.getConsequentRuleAccess().getAtomsAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Rule__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Rule__Group__0__Impl
	rule__Rule__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleAccess().getNameAssignment_0()); }
(rule__Rule__NameAssignment_0)
{ after(grammarAccess.getRuleAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Rule__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Rule__Group__1__Impl
	rule__Rule__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getRuleAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Rule__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Rule__Group__2__Impl
	rule__Rule__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleAccess().getQuestionMarkKeyword_2()); }

	'?' 

{ after(grammarAccess.getRuleAccess().getQuestionMarkKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Rule__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Rule__Group__3__Impl
	rule__Rule__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleAccess().getVariableAssignment_3()); }
(rule__Rule__VariableAssignment_3)
{ after(grammarAccess.getRuleAccess().getVariableAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Rule__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Rule__Group__4__Impl
	rule__Rule__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleAccess().getGroup_4()); }
(rule__Rule__Group_4__0)*
{ after(grammarAccess.getRuleAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Rule__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Rule__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleAccess().getRightParenthesisKeyword_5()); }

	')' 

{ after(grammarAccess.getRuleAccess().getRightParenthesisKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Rule__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Rule__Group_4__0__Impl
	rule__Rule__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleAccess().getCommaKeyword_4_0()); }

	',' 

{ after(grammarAccess.getRuleAccess().getCommaKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Rule__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Rule__Group_4__1__Impl
	rule__Rule__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleAccess().getQuestionMarkKeyword_4_1()); }

	'?' 

{ after(grammarAccess.getRuleAccess().getQuestionMarkKeyword_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Rule__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Rule__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleAccess().getVariableAssignment_4_2()); }
(rule__Rule__VariableAssignment_4_2)
{ after(grammarAccess.getRuleAccess().getVariableAssignment_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__OCLOperator__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OCLOperator__Group__0__Impl
	rule__OCLOperator__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OCLOperator__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOCLOperatorAccess().getOclKeyword_0()); }

	'ocl' 

{ after(grammarAccess.getOCLOperatorAccess().getOclKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OCLOperator__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OCLOperator__Group__1__Impl
	rule__OCLOperator__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OCLOperator__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOCLOperatorAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getOCLOperatorAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OCLOperator__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OCLOperator__Group__2__Impl
	rule__OCLOperator__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__OCLOperator__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOCLOperatorAccess().getConstraintAssignment_2()); }
(rule__OCLOperator__ConstraintAssignment_2)
{ after(grammarAccess.getOCLOperatorAccess().getConstraintAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OCLOperator__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OCLOperator__Group__3__Impl
	rule__OCLOperator__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__OCLOperator__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOCLOperatorAccess().getCommaKeyword_3()); }

	',' 

{ after(grammarAccess.getOCLOperatorAccess().getCommaKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OCLOperator__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OCLOperator__Group__4__Impl
	rule__OCLOperator__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__OCLOperator__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOCLOperatorAccess().getStreamAssignment_4()); }
(rule__OCLOperator__StreamAssignment_4)
{ after(grammarAccess.getOCLOperatorAccess().getStreamAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OCLOperator__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OCLOperator__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OCLOperator__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOCLOperatorAccess().getRightParenthesisKeyword_5()); }

	')' 

{ after(grammarAccess.getOCLOperatorAccess().getRightParenthesisKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__CountOperator__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CountOperator__Group__0__Impl
	rule__CountOperator__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CountOperator__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCountOperatorAccess().getCountKeyword_0()); }

	'count' 

{ after(grammarAccess.getCountOperatorAccess().getCountKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CountOperator__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CountOperator__Group__1__Impl
	rule__CountOperator__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CountOperator__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCountOperatorAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getCountOperatorAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CountOperator__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CountOperator__Group__2__Impl
	rule__CountOperator__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CountOperator__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCountOperatorAccess().getParameterAssignment_2()); }
(rule__CountOperator__ParameterAssignment_2)
{ after(grammarAccess.getCountOperatorAccess().getParameterAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CountOperator__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CountOperator__Group__3__Impl
	rule__CountOperator__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CountOperator__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCountOperatorAccess().getCommaKeyword_3()); }

	',' 

{ after(grammarAccess.getCountOperatorAccess().getCommaKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CountOperator__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CountOperator__Group__4__Impl
	rule__CountOperator__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__CountOperator__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCountOperatorAccess().getStreamAssignment_4()); }
(rule__CountOperator__StreamAssignment_4)
{ after(grammarAccess.getCountOperatorAccess().getStreamAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CountOperator__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CountOperator__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CountOperator__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCountOperatorAccess().getRightParenthesisKeyword_5()); }

	')' 

{ after(grammarAccess.getCountOperatorAccess().getRightParenthesisKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__StandardDeviationOperator__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StandardDeviationOperator__Group__0__Impl
	rule__StandardDeviationOperator__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StandardDeviationOperator__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStandardDeviationOperatorAccess().getStdKeyword_0()); }

	'std' 

{ after(grammarAccess.getStandardDeviationOperatorAccess().getStdKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StandardDeviationOperator__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StandardDeviationOperator__Group__1__Impl
	rule__StandardDeviationOperator__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StandardDeviationOperator__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStandardDeviationOperatorAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getStandardDeviationOperatorAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StandardDeviationOperator__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StandardDeviationOperator__Group__2__Impl
	rule__StandardDeviationOperator__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StandardDeviationOperator__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStandardDeviationOperatorAccess().getParameterAssignment_2()); }
(rule__StandardDeviationOperator__ParameterAssignment_2)
{ after(grammarAccess.getStandardDeviationOperatorAccess().getParameterAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StandardDeviationOperator__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StandardDeviationOperator__Group__3__Impl
	rule__StandardDeviationOperator__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__StandardDeviationOperator__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStandardDeviationOperatorAccess().getCommaKeyword_3()); }

	',' 

{ after(grammarAccess.getStandardDeviationOperatorAccess().getCommaKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StandardDeviationOperator__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StandardDeviationOperator__Group__4__Impl
	rule__StandardDeviationOperator__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__StandardDeviationOperator__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStandardDeviationOperatorAccess().getStreamAssignment_4()); }
(rule__StandardDeviationOperator__StreamAssignment_4)
{ after(grammarAccess.getStandardDeviationOperatorAccess().getStreamAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StandardDeviationOperator__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StandardDeviationOperator__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StandardDeviationOperator__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStandardDeviationOperatorAccess().getRightParenthesisKeyword_5()); }

	')' 

{ after(grammarAccess.getStandardDeviationOperatorAccess().getRightParenthesisKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__AverageOperator__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AverageOperator__Group__0__Impl
	rule__AverageOperator__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AverageOperator__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAverageOperatorAccess().getAvgKeyword_0()); }

	'avg' 

{ after(grammarAccess.getAverageOperatorAccess().getAvgKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AverageOperator__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AverageOperator__Group__1__Impl
	rule__AverageOperator__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AverageOperator__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAverageOperatorAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getAverageOperatorAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AverageOperator__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AverageOperator__Group__2__Impl
	rule__AverageOperator__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AverageOperator__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAverageOperatorAccess().getParameterAssignment_2()); }
(rule__AverageOperator__ParameterAssignment_2)
{ after(grammarAccess.getAverageOperatorAccess().getParameterAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AverageOperator__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AverageOperator__Group__3__Impl
	rule__AverageOperator__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AverageOperator__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAverageOperatorAccess().getCommaKeyword_3()); }

	',' 

{ after(grammarAccess.getAverageOperatorAccess().getCommaKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AverageOperator__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AverageOperator__Group__4__Impl
	rule__AverageOperator__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__AverageOperator__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAverageOperatorAccess().getStreamAssignment_4()); }
(rule__AverageOperator__StreamAssignment_4)
{ after(grammarAccess.getAverageOperatorAccess().getStreamAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AverageOperator__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AverageOperator__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AverageOperator__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAverageOperatorAccess().getRightParenthesisKeyword_5()); }

	')' 

{ after(grammarAccess.getAverageOperatorAccess().getRightParenthesisKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__AdditionOperator__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdditionOperator__Group__0__Impl
	rule__AdditionOperator__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionOperator__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionOperatorAccess().getAddKeyword_0()); }

	'add' 

{ after(grammarAccess.getAdditionOperatorAccess().getAddKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AdditionOperator__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdditionOperator__Group__1__Impl
	rule__AdditionOperator__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionOperator__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionOperatorAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getAdditionOperatorAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AdditionOperator__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdditionOperator__Group__2__Impl
	rule__AdditionOperator__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionOperator__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionOperatorAccess().getParameterAssignment_2()); }
(rule__AdditionOperator__ParameterAssignment_2)
{ after(grammarAccess.getAdditionOperatorAccess().getParameterAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AdditionOperator__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdditionOperator__Group__3__Impl
	rule__AdditionOperator__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionOperator__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionOperatorAccess().getCommaKeyword_3()); }

	',' 

{ after(grammarAccess.getAdditionOperatorAccess().getCommaKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AdditionOperator__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdditionOperator__Group__4__Impl
	rule__AdditionOperator__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionOperator__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionOperatorAccess().getAlternatives_4()); }
(rule__AdditionOperator__Alternatives_4)
{ after(grammarAccess.getAdditionOperatorAccess().getAlternatives_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AdditionOperator__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdditionOperator__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionOperator__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionOperatorAccess().getRightParenthesisKeyword_5()); }

	')' 

{ after(grammarAccess.getAdditionOperatorAccess().getRightParenthesisKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__SubtractionOperator__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SubtractionOperator__Group__0__Impl
	rule__SubtractionOperator__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SubtractionOperator__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubtractionOperatorAccess().getSubKeyword_0()); }

	'sub' 

{ after(grammarAccess.getSubtractionOperatorAccess().getSubKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SubtractionOperator__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SubtractionOperator__Group__1__Impl
	rule__SubtractionOperator__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SubtractionOperator__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubtractionOperatorAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getSubtractionOperatorAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SubtractionOperator__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SubtractionOperator__Group__2__Impl
	rule__SubtractionOperator__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SubtractionOperator__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubtractionOperatorAccess().getParameterAssignment_2()); }
(rule__SubtractionOperator__ParameterAssignment_2)
{ after(grammarAccess.getSubtractionOperatorAccess().getParameterAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SubtractionOperator__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SubtractionOperator__Group__3__Impl
	rule__SubtractionOperator__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SubtractionOperator__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubtractionOperatorAccess().getCommaKeyword_3()); }

	',' 

{ after(grammarAccess.getSubtractionOperatorAccess().getCommaKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SubtractionOperator__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SubtractionOperator__Group__4__Impl
	rule__SubtractionOperator__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__SubtractionOperator__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubtractionOperatorAccess().getAlternatives_4()); }
(rule__SubtractionOperator__Alternatives_4)
{ after(grammarAccess.getSubtractionOperatorAccess().getAlternatives_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SubtractionOperator__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SubtractionOperator__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SubtractionOperator__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubtractionOperatorAccess().getRightParenthesisKeyword_5()); }

	')' 

{ after(grammarAccess.getSubtractionOperatorAccess().getRightParenthesisKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__MultiplicationOperator__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiplicationOperator__Group__0__Impl
	rule__MultiplicationOperator__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicationOperator__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicationOperatorAccess().getMultKeyword_0()); }

	'mult' 

{ after(grammarAccess.getMultiplicationOperatorAccess().getMultKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MultiplicationOperator__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiplicationOperator__Group__1__Impl
	rule__MultiplicationOperator__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicationOperator__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicationOperatorAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getMultiplicationOperatorAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MultiplicationOperator__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiplicationOperator__Group__2__Impl
	rule__MultiplicationOperator__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicationOperator__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicationOperatorAccess().getParameterAssignment_2()); }
(rule__MultiplicationOperator__ParameterAssignment_2)
{ after(grammarAccess.getMultiplicationOperatorAccess().getParameterAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MultiplicationOperator__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiplicationOperator__Group__3__Impl
	rule__MultiplicationOperator__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicationOperator__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicationOperatorAccess().getCommaKeyword_3()); }

	',' 

{ after(grammarAccess.getMultiplicationOperatorAccess().getCommaKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MultiplicationOperator__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiplicationOperator__Group__4__Impl
	rule__MultiplicationOperator__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicationOperator__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicationOperatorAccess().getAlternatives_4()); }
(rule__MultiplicationOperator__Alternatives_4)
{ after(grammarAccess.getMultiplicationOperatorAccess().getAlternatives_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MultiplicationOperator__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiplicationOperator__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicationOperator__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicationOperatorAccess().getRightParenthesisKeyword_5()); }

	')' 

{ after(grammarAccess.getMultiplicationOperatorAccess().getRightParenthesisKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__DivisionOperator__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DivisionOperator__Group__0__Impl
	rule__DivisionOperator__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DivisionOperator__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDivisionOperatorAccess().getDivKeyword_0()); }

	'div' 

{ after(grammarAccess.getDivisionOperatorAccess().getDivKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DivisionOperator__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DivisionOperator__Group__1__Impl
	rule__DivisionOperator__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DivisionOperator__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDivisionOperatorAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getDivisionOperatorAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DivisionOperator__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DivisionOperator__Group__2__Impl
	rule__DivisionOperator__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DivisionOperator__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDivisionOperatorAccess().getParameterAssignment_2()); }
(rule__DivisionOperator__ParameterAssignment_2)
{ after(grammarAccess.getDivisionOperatorAccess().getParameterAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DivisionOperator__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DivisionOperator__Group__3__Impl
	rule__DivisionOperator__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DivisionOperator__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDivisionOperatorAccess().getCommaKeyword_3()); }

	',' 

{ after(grammarAccess.getDivisionOperatorAccess().getCommaKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DivisionOperator__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DivisionOperator__Group__4__Impl
	rule__DivisionOperator__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__DivisionOperator__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDivisionOperatorAccess().getAlternatives_4()); }
(rule__DivisionOperator__Alternatives_4)
{ after(grammarAccess.getDivisionOperatorAccess().getAlternatives_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DivisionOperator__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DivisionOperator__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DivisionOperator__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDivisionOperatorAccess().getRightParenthesisKeyword_5()); }

	')' 

{ after(grammarAccess.getDivisionOperatorAccess().getRightParenthesisKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__OutputOperator__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OutputOperator__Group__0__Impl
	rule__OutputOperator__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputOperator__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutputOperatorAccess().getOutKeyword_0()); }

	'out' 

{ after(grammarAccess.getOutputOperatorAccess().getOutKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OutputOperator__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OutputOperator__Group__1__Impl
	rule__OutputOperator__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputOperator__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutputOperatorAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getOutputOperatorAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OutputOperator__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OutputOperator__Group__2__Impl
	rule__OutputOperator__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputOperator__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutputOperatorAccess().getStreamAssignment_2()); }
(rule__OutputOperator__StreamAssignment_2)
{ after(grammarAccess.getOutputOperatorAccess().getStreamAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OutputOperator__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OutputOperator__Group__3__Impl
	rule__OutputOperator__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputOperator__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutputOperatorAccess().getCommaKeyword_3()); }

	',' 

{ after(grammarAccess.getOutputOperatorAccess().getCommaKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OutputOperator__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OutputOperator__Group__4__Impl
	rule__OutputOperator__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputOperator__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutputOperatorAccess().getIriAssignment_4()); }
(rule__OutputOperator__IriAssignment_4)
{ after(grammarAccess.getOutputOperatorAccess().getIriAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OutputOperator__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OutputOperator__Group__5__Impl
	rule__OutputOperator__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputOperator__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutputOperatorAccess().getGroup_5()); }
(rule__OutputOperator__Group_5__0)*
{ after(grammarAccess.getOutputOperatorAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OutputOperator__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OutputOperator__Group__6__Impl
	rule__OutputOperator__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputOperator__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutputOperatorAccess().getCommaKeyword_6()); }

	',' 

{ after(grammarAccess.getOutputOperatorAccess().getCommaKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OutputOperator__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OutputOperator__Group__7__Impl
	rule__OutputOperator__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputOperator__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutputOperatorAccess().getAddressAssignment_7()); }
(rule__OutputOperator__AddressAssignment_7)
{ after(grammarAccess.getOutputOperatorAccess().getAddressAssignment_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OutputOperator__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OutputOperator__Group__8__Impl
	rule__OutputOperator__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputOperator__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutputOperatorAccess().getCommaKeyword_8()); }

	',' 

{ after(grammarAccess.getOutputOperatorAccess().getCommaKeyword_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OutputOperator__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OutputOperator__Group__9__Impl
	rule__OutputOperator__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputOperator__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutputOperatorAccess().getPortAssignment_9()); }
(rule__OutputOperator__PortAssignment_9)
{ after(grammarAccess.getOutputOperatorAccess().getPortAssignment_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OutputOperator__Group__10
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OutputOperator__Group__10__Impl
	rule__OutputOperator__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputOperator__Group__10__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutputOperatorAccess().getRightParenthesisKeyword_10()); }

	')' 

{ after(grammarAccess.getOutputOperatorAccess().getRightParenthesisKeyword_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OutputOperator__Group__11
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OutputOperator__Group__11__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputOperator__Group__11__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutputOperatorAccess().getSemicolonKeyword_11()); }

	';' 

{ after(grammarAccess.getOutputOperatorAccess().getSemicolonKeyword_11()); }
)

;
finally {
	restoreStackSize(stackSize);
}


























rule__OutputOperator__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OutputOperator__Group_5__0__Impl
	rule__OutputOperator__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputOperator__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutputOperatorAccess().getCommaKeyword_5_0()); }

	',' 

{ after(grammarAccess.getOutputOperatorAccess().getCommaKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OutputOperator__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OutputOperator__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputOperator__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutputOperatorAccess().getIriAssignment_5_1()); }
(rule__OutputOperator__IriAssignment_5_1)
{ after(grammarAccess.getOutputOperatorAccess().getIriAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__VariableDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclaration__Group__0__Impl
	rule__VariableDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getTypeAssignment_0()); }
(rule__VariableDeclaration__TypeAssignment_0)
{ after(grammarAccess.getVariableDeclarationAccess().getTypeAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclaration__Group__1__Impl
	rule__VariableDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getNameAssignment_1()); }
(rule__VariableDeclaration__NameAssignment_1)
{ after(grammarAccess.getVariableDeclarationAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclaration__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getSemicolonKeyword_2()); }

	';' 

{ after(grammarAccess.getVariableDeclarationAccess().getSemicolonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__NumberVariableDefinition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NumberVariableDefinition__Group__0__Impl
	rule__NumberVariableDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberVariableDefinition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumberVariableDefinitionAccess().getTypeAssignment_0()); }
(rule__NumberVariableDefinition__TypeAssignment_0)
{ after(grammarAccess.getNumberVariableDefinitionAccess().getTypeAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NumberVariableDefinition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NumberVariableDefinition__Group__1__Impl
	rule__NumberVariableDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberVariableDefinition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumberVariableDefinitionAccess().getNameAssignment_1()); }
(rule__NumberVariableDefinition__NameAssignment_1)
{ after(grammarAccess.getNumberVariableDefinitionAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NumberVariableDefinition__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NumberVariableDefinition__Group__2__Impl
	rule__NumberVariableDefinition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberVariableDefinition__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumberVariableDefinitionAccess().getEqualsSignKeyword_2()); }

	'=' 

{ after(grammarAccess.getNumberVariableDefinitionAccess().getEqualsSignKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NumberVariableDefinition__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NumberVariableDefinition__Group__3__Impl
	rule__NumberVariableDefinition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberVariableDefinition__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumberVariableDefinitionAccess().getValueAssignment_3()); }
(rule__NumberVariableDefinition__ValueAssignment_3)
{ after(grammarAccess.getNumberVariableDefinitionAccess().getValueAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NumberVariableDefinition__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NumberVariableDefinition__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberVariableDefinition__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumberVariableDefinitionAccess().getSemicolonKeyword_4()); }

	';' 

{ after(grammarAccess.getNumberVariableDefinitionAccess().getSemicolonKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__StringVariableDefinition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StringVariableDefinition__Group__0__Impl
	rule__StringVariableDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StringVariableDefinition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringVariableDefinitionAccess().getTypeAssignment_0()); }
(rule__StringVariableDefinition__TypeAssignment_0)
{ after(grammarAccess.getStringVariableDefinitionAccess().getTypeAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StringVariableDefinition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StringVariableDefinition__Group__1__Impl
	rule__StringVariableDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StringVariableDefinition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringVariableDefinitionAccess().getNameAssignment_1()); }
(rule__StringVariableDefinition__NameAssignment_1)
{ after(grammarAccess.getStringVariableDefinitionAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StringVariableDefinition__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StringVariableDefinition__Group__2__Impl
	rule__StringVariableDefinition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StringVariableDefinition__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringVariableDefinitionAccess().getEqualsSignKeyword_2()); }

	'=' 

{ after(grammarAccess.getStringVariableDefinitionAccess().getEqualsSignKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StringVariableDefinition__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StringVariableDefinition__Group__3__Impl
	rule__StringVariableDefinition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__StringVariableDefinition__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringVariableDefinitionAccess().getValueAssignment_3()); }
(rule__StringVariableDefinition__ValueAssignment_3)
{ after(grammarAccess.getStringVariableDefinitionAccess().getValueAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StringVariableDefinition__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StringVariableDefinition__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StringVariableDefinition__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringVariableDefinitionAccess().getSemicolonKeyword_4()); }

	';' 

{ after(grammarAccess.getStringVariableDefinitionAccess().getSemicolonKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__BooleanVariableDefinition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BooleanVariableDefinition__Group__0__Impl
	rule__BooleanVariableDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanVariableDefinition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanVariableDefinitionAccess().getTypeAssignment_0()); }
(rule__BooleanVariableDefinition__TypeAssignment_0)
{ after(grammarAccess.getBooleanVariableDefinitionAccess().getTypeAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BooleanVariableDefinition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BooleanVariableDefinition__Group__1__Impl
	rule__BooleanVariableDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanVariableDefinition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanVariableDefinitionAccess().getNameAssignment_1()); }
(rule__BooleanVariableDefinition__NameAssignment_1)
{ after(grammarAccess.getBooleanVariableDefinitionAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BooleanVariableDefinition__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BooleanVariableDefinition__Group__2__Impl
	rule__BooleanVariableDefinition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanVariableDefinition__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanVariableDefinitionAccess().getEqualsSignKeyword_2()); }

	'=' 

{ after(grammarAccess.getBooleanVariableDefinitionAccess().getEqualsSignKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BooleanVariableDefinition__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BooleanVariableDefinition__Group__3__Impl
	rule__BooleanVariableDefinition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanVariableDefinition__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanVariableDefinitionAccess().getValueAssignment_3()); }
(rule__BooleanVariableDefinition__ValueAssignment_3)
{ after(grammarAccess.getBooleanVariableDefinitionAccess().getValueAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BooleanVariableDefinition__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BooleanVariableDefinition__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanVariableDefinition__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanVariableDefinitionAccess().getSemicolonKeyword_4()); }

	';' 

{ after(grammarAccess.getBooleanVariableDefinitionAccess().getSemicolonKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__StructureDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructureDeclaration__Group__0__Impl
	rule__StructureDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StructureDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructureDeclarationAccess().getStructureKeyword_0()); }

	'structure' 

{ after(grammarAccess.getStructureDeclarationAccess().getStructureKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StructureDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructureDeclaration__Group__1__Impl
	rule__StructureDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StructureDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructureDeclarationAccess().getNameAssignment_1()); }
(rule__StructureDeclaration__NameAssignment_1)
{ after(grammarAccess.getStructureDeclarationAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StructureDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructureDeclaration__Group__2__Impl
	rule__StructureDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StructureDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructureDeclarationAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getStructureDeclarationAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StructureDeclaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructureDeclaration__Group__3__Impl
	rule__StructureDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__StructureDeclaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getStructureDeclarationAccess().getElementsAssignment_3()); }
(rule__StructureDeclaration__ElementsAssignment_3)
{ after(grammarAccess.getStructureDeclarationAccess().getElementsAssignment_3()); }
)
(
{ before(grammarAccess.getStructureDeclarationAccess().getElementsAssignment_3()); }
(rule__StructureDeclaration__ElementsAssignment_3)*
{ after(grammarAccess.getStructureDeclarationAccess().getElementsAssignment_3()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StructureDeclaration__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructureDeclaration__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StructureDeclaration__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructureDeclarationAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getStructureDeclarationAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__StreamDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StreamDeclaration__Group__0__Impl
	rule__StreamDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StreamDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStreamDeclarationAccess().getStreamKeyword_0()); }

	'stream' 

{ after(grammarAccess.getStreamDeclarationAccess().getStreamKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StreamDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StreamDeclaration__Group__1__Impl
	rule__StreamDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StreamDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStreamDeclarationAccess().getNameAssignment_1()); }
(rule__StreamDeclaration__NameAssignment_1)
{ after(grammarAccess.getStreamDeclarationAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StreamDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StreamDeclaration__Group__2__Impl
	rule__StreamDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StreamDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStreamDeclarationAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getStreamDeclarationAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StreamDeclaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StreamDeclaration__Group__3__Impl
	rule__StreamDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__StreamDeclaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getStreamDeclarationAccess().getElementsAssignment_3()); }
(rule__StreamDeclaration__ElementsAssignment_3)
{ after(grammarAccess.getStreamDeclarationAccess().getElementsAssignment_3()); }
)
(
{ before(grammarAccess.getStreamDeclarationAccess().getElementsAssignment_3()); }
(rule__StreamDeclaration__ElementsAssignment_3)*
{ after(grammarAccess.getStreamDeclarationAccess().getElementsAssignment_3()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StreamDeclaration__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StreamDeclaration__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StreamDeclaration__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStreamDeclarationAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getStreamDeclarationAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__StructureElements__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructureElements__Group__0__Impl
	rule__StructureElements__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StructureElements__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructureElementsAccess().getUseKeyword_0()); }

	'use' 

{ after(grammarAccess.getStructureElementsAccess().getUseKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StructureElements__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructureElements__Group__1__Impl
	rule__StructureElements__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StructureElements__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructureElementsAccess().getElementAssignment_1()); }
(rule__StructureElements__ElementAssignment_1)
{ after(grammarAccess.getStructureElementsAccess().getElementAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StructureElements__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructureElements__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StructureElements__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructureElementsAccess().getSemicolonKeyword_2()); }

	';' 

{ after(grammarAccess.getStructureElementsAccess().getSemicolonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Or__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Or__Group__0__Impl
	rule__Or__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrAccess().getAndParserRuleCall_0()); }
	ruleAnd
{ after(grammarAccess.getOrAccess().getAndParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Or__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Or__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrAccess().getGroup_1()); }
(rule__Or__Group_1__0)*
{ after(grammarAccess.getOrAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Or__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Or__Group_1__0__Impl
	rule__Or__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrAccess().getBooleanOperationLeftAction_1_0()); }
(

)
{ after(grammarAccess.getOrAccess().getBooleanOperationLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Or__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Or__Group_1__1__Impl
	rule__Or__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrAccess().getOperatorAssignment_1_1()); }
(rule__Or__OperatorAssignment_1_1)
{ after(grammarAccess.getOrAccess().getOperatorAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Or__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Or__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrAccess().getRightAssignment_1_2()); }
(rule__Or__RightAssignment_1_2)
{ after(grammarAccess.getOrAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__And__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__And__Group__0__Impl
	rule__And__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndAccess().getRelationalExpressionParserRuleCall_0()); }
	ruleRelationalExpression
{ after(grammarAccess.getAndAccess().getRelationalExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__And__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__And__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndAccess().getGroup_1()); }
(rule__And__Group_1__0)*
{ after(grammarAccess.getAndAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__And__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__And__Group_1__0__Impl
	rule__And__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndAccess().getBooleanOperationLeftAction_1_0()); }
(

)
{ after(grammarAccess.getAndAccess().getBooleanOperationLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__And__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__And__Group_1__1__Impl
	rule__And__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndAccess().getOperatorAssignment_1_1()); }
(rule__And__OperatorAssignment_1_1)
{ after(grammarAccess.getAndAccess().getOperatorAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__And__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__And__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndAccess().getRightAssignment_1_2()); }
(rule__And__RightAssignment_1_2)
{ after(grammarAccess.getAndAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__RelationalExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationalExpression__Group__0__Impl
	rule__RelationalExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExpressionAccess().getAdditionParserRuleCall_0()); }
	ruleAddition
{ after(grammarAccess.getRelationalExpressionAccess().getAdditionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RelationalExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationalExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExpressionAccess().getGroup_1()); }
(rule__RelationalExpression__Group_1__0)*
{ after(grammarAccess.getRelationalExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RelationalExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationalExpression__Group_1__0__Impl
	rule__RelationalExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExpressionAccess().getBooleanOperationLeftAction_1_0()); }
(

)
{ after(grammarAccess.getRelationalExpressionAccess().getBooleanOperationLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RelationalExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationalExpression__Group_1__1__Impl
	rule__RelationalExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExpressionAccess().getOperatorAssignment_1_1()); }
(rule__RelationalExpression__OperatorAssignment_1_1)
{ after(grammarAccess.getRelationalExpressionAccess().getOperatorAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RelationalExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationalExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExpressionAccess().getRightAssignment_1_2()); }
(rule__RelationalExpression__RightAssignment_1_2)
{ after(grammarAccess.getRelationalExpressionAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Addition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Addition__Group__0__Impl
	rule__Addition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionAccess().getMultiplicationParserRuleCall_0()); }
	ruleMultiplication
{ after(grammarAccess.getAdditionAccess().getMultiplicationParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Addition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Addition__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionAccess().getGroup_1()); }
(rule__Addition__Group_1__0)*
{ after(grammarAccess.getAdditionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Addition__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Addition__Group_1__0__Impl
	rule__Addition__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionAccess().getAlternatives_1_0()); }
(rule__Addition__Alternatives_1_0)
{ after(grammarAccess.getAdditionAccess().getAlternatives_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Addition__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Addition__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionAccess().getRightAssignment_1_1()); }
(rule__Addition__RightAssignment_1_1)
{ after(grammarAccess.getAdditionAccess().getRightAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Addition__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Addition__Group_1_0_0__0__Impl
	rule__Addition__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionAccess().getPlusLeftAction_1_0_0_0()); }
(

)
{ after(grammarAccess.getAdditionAccess().getPlusLeftAction_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Addition__Group_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Addition__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionAccess().getPlusSignKeyword_1_0_0_1()); }

	'+' 

{ after(grammarAccess.getAdditionAccess().getPlusSignKeyword_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Addition__Group_1_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Addition__Group_1_0_1__0__Impl
	rule__Addition__Group_1_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group_1_0_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionAccess().getMinusLeftAction_1_0_1_0()); }
(

)
{ after(grammarAccess.getAdditionAccess().getMinusLeftAction_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Addition__Group_1_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Addition__Group_1_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group_1_0_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionAccess().getHyphenMinusKeyword_1_0_1_1()); }

	'-' 

{ after(grammarAccess.getAdditionAccess().getHyphenMinusKeyword_1_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Multiplication__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Multiplication__Group__0__Impl
	rule__Multiplication__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicationAccess().getPrimaryExpressionParserRuleCall_0()); }
	rulePrimaryExpression
{ after(grammarAccess.getMultiplicationAccess().getPrimaryExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Multiplication__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Multiplication__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicationAccess().getGroup_1()); }
(rule__Multiplication__Group_1__0)*
{ after(grammarAccess.getMultiplicationAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Multiplication__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Multiplication__Group_1__0__Impl
	rule__Multiplication__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicationAccess().getAlternatives_1_0()); }
(rule__Multiplication__Alternatives_1_0)
{ after(grammarAccess.getMultiplicationAccess().getAlternatives_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Multiplication__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Multiplication__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicationAccess().getRightAssignment_1_1()); }
(rule__Multiplication__RightAssignment_1_1)
{ after(grammarAccess.getMultiplicationAccess().getRightAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Multiplication__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Multiplication__Group_1_0_0__0__Impl
	rule__Multiplication__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicationAccess().getMultiLeftAction_1_0_0_0()); }
(

)
{ after(grammarAccess.getMultiplicationAccess().getMultiLeftAction_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Multiplication__Group_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Multiplication__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicationAccess().getAsteriskKeyword_1_0_0_1()); }

	'*' 

{ after(grammarAccess.getMultiplicationAccess().getAsteriskKeyword_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Multiplication__Group_1_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Multiplication__Group_1_0_1__0__Impl
	rule__Multiplication__Group_1_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group_1_0_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicationAccess().getDivLeftAction_1_0_1_0()); }
(

)
{ after(grammarAccess.getMultiplicationAccess().getDivLeftAction_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Multiplication__Group_1_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Multiplication__Group_1_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group_1_0_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicationAccess().getSolidusKeyword_1_0_1_1()); }

	'/' 

{ after(grammarAccess.getMultiplicationAccess().getSolidusKeyword_1_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PrimaryExpression__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_0__0__Impl
	rule__PrimaryExpression__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getLeftParenthesisKeyword_0_0()); }

	'(' 

{ after(grammarAccess.getPrimaryExpressionAccess().getLeftParenthesisKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_0__1__Impl
	rule__PrimaryExpression__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getExpressionParserRuleCall_0_1()); }
	ruleExpression
{ after(grammarAccess.getPrimaryExpressionAccess().getExpressionParserRuleCall_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getRightParenthesisKeyword_0_2()); }

	')' 

{ after(grammarAccess.getPrimaryExpressionAccess().getRightParenthesisKeyword_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__PrimaryExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_1__0__Impl
	rule__PrimaryExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getNumberLiteralAction_1_0()); }
(

)
{ after(grammarAccess.getPrimaryExpressionAccess().getNumberLiteralAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getValueAssignment_1_1()); }
(rule__PrimaryExpression__ValueAssignment_1_1)
{ after(grammarAccess.getPrimaryExpressionAccess().getValueAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PrimaryExpression__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_2__0__Impl
	rule__PrimaryExpression__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getVariableCallAction_2_0()); }
(

)
{ after(grammarAccess.getPrimaryExpressionAccess().getVariableCallAction_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getVariableAssignment_2_1()); }
(rule__PrimaryExpression__VariableAssignment_2_1)
{ after(grammarAccess.getPrimaryExpressionAccess().getVariableAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PrimaryExpression__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_3__0__Impl
	rule__PrimaryExpression__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getStreamAccessAction_3_0()); }
(

)
{ after(grammarAccess.getPrimaryExpressionAccess().getStreamAccessAction_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getStreamVariableAssignment_3_1()); }
(rule__PrimaryExpression__StreamVariableAssignment_3_1)
{ after(grammarAccess.getPrimaryExpressionAccess().getStreamVariableAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__IntegerDataType__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntegerDataType__Group__0__Impl
	rule__IntegerDataType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerDataType__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerDataTypeAccess().getIntKeyword_0()); }

	'int' 

{ after(grammarAccess.getIntegerDataTypeAccess().getIntKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IntegerDataType__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntegerDataType__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerDataType__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerDataTypeAccess().getIntegerDataTypeAction_1()); }
(

)
{ after(grammarAccess.getIntegerDataTypeAccess().getIntegerDataTypeAction_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__BooleanDataType__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BooleanDataType__Group__0__Impl
	rule__BooleanDataType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanDataType__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanDataTypeAccess().getBoolKeyword_0()); }

	'bool' 

{ after(grammarAccess.getBooleanDataTypeAccess().getBoolKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BooleanDataType__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BooleanDataType__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanDataType__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanDataTypeAccess().getBooleanDataTypeAction_1()); }
(

)
{ after(grammarAccess.getBooleanDataTypeAccess().getBooleanDataTypeAction_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FloatDataType__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FloatDataType__Group__0__Impl
	rule__FloatDataType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FloatDataType__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFloatDataTypeAccess().getFloatKeyword_0()); }

	'float' 

{ after(grammarAccess.getFloatDataTypeAccess().getFloatKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FloatDataType__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FloatDataType__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FloatDataType__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFloatDataTypeAccess().getFloatDataTypeAction_1()); }
(

)
{ after(grammarAccess.getFloatDataTypeAccess().getFloatDataTypeAction_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__StringDataType__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StringDataType__Group__0__Impl
	rule__StringDataType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StringDataType__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringDataTypeAccess().getStringKeyword_0()); }

	'string' 

{ after(grammarAccess.getStringDataTypeAccess().getStringKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StringDataType__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StringDataType__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StringDataType__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringDataTypeAccess().getStringDataTypeAction_1()); }
(

)
{ after(grammarAccess.getStringDataTypeAccess().getStringDataTypeAction_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__Model__ModelsAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getModelsPackageDeclarationParserRuleCall_0()); }
	rulePackageDeclaration{ after(grammarAccess.getModelAccess().getModelsPackageDeclarationParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageDeclarationAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getPackageDeclarationAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__ElementsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageDeclarationAccess().getElementsModelElementParserRuleCall_3_0()); }
	ruleModelElement{ after(grammarAccess.getPackageDeclarationAccess().getElementsModelElementParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Import__ImportURIAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportURISTRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getImportAccess().getImportURISTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StreamStatement__ReturnStreamAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStreamStatementAccess().getReturnStreamStreamDefinitionCrossReference_0_0()); }
(
{ before(grammarAccess.getStreamStatementAccess().getReturnStreamStreamDefinitionIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getStreamStatementAccess().getReturnStreamStreamDefinitionIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getStreamStatementAccess().getReturnStreamStreamDefinitionCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StreamStatement__ReturnStreamAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStreamStatementAccess().getReturnStreamStreamDefinitionCrossReference_1_1_0()); }
(
{ before(grammarAccess.getStreamStatementAccess().getReturnStreamStreamDefinitionIDTerminalRuleCall_1_1_0_1()); }
	RULE_ID{ after(grammarAccess.getStreamStatementAccess().getReturnStreamStreamDefinitionIDTerminalRuleCall_1_1_0_1()); }
)
{ after(grammarAccess.getStreamStatementAccess().getReturnStreamStreamDefinitionCrossReference_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StreamStatement__OperatorAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStreamStatementAccess().getOperatorReturnTypeOperatorParserRuleCall_3_0()); }
	ruleReturnTypeOperator{ after(grammarAccess.getStreamStatementAccess().getOperatorReturnTypeOperatorParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__StreamAccess__ReferenceAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStreamAccessAccess().getReferenceStreamDefinitionCrossReference_0_0()); }
(
{ before(grammarAccess.getStreamAccessAccess().getReferenceStreamDefinitionIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getStreamAccessAccess().getReferenceStreamDefinitionIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getStreamAccessAccess().getReferenceStreamDefinitionCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StreamAccess__ElementAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStreamAccessAccess().getElementVariableDeclarationCrossReference_2_0()); }
(
{ before(grammarAccess.getStreamAccessAccess().getElementVariableDeclarationIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getStreamAccessAccess().getElementVariableDeclarationIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getStreamAccessAccess().getElementVariableDeclarationCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__StreamDefinition__ReferenceAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStreamDefinitionAccess().getReferenceStreamDeclarationCrossReference_0_0()); }
(
{ before(grammarAccess.getStreamDefinitionAccess().getReferenceStreamDeclarationIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getStreamDefinitionAccess().getReferenceStreamDeclarationIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getStreamDefinitionAccess().getReferenceStreamDeclarationCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StreamDefinition__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStreamDefinitionAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getStreamDefinitionAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JoinOperator__ParametersAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJoinOperatorAccess().getParametersStreamOperatorParameterParserRuleCall_2_0()); }
	ruleStreamOperatorParameter{ after(grammarAccess.getJoinOperatorAccess().getParametersStreamOperatorParameterParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JoinOperator__ParametersAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJoinOperatorAccess().getParametersStreamOperatorParameterParserRuleCall_4_0()); }
	ruleStreamOperatorParameter{ after(grammarAccess.getJoinOperatorAccess().getParametersStreamOperatorParameterParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JoinOperator__ParametersAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJoinOperatorAccess().getParametersStreamOperatorParameterParserRuleCall_5_1_0()); }
	ruleStreamOperatorParameter{ after(grammarAccess.getJoinOperatorAccess().getParametersStreamOperatorParameterParserRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StreamOperatorParameter__StreamAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStreamOperatorParameterAccess().getStreamStreamDefinitionCrossReference_0_0()); }
(
{ before(grammarAccess.getStreamOperatorParameterAccess().getStreamStreamDefinitionIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getStreamOperatorParameterAccess().getStreamStreamDefinitionIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getStreamOperatorParameterAccess().getStreamStreamDefinitionCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StreamOperatorParameter__BarrierAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStreamOperatorParameterAccess().getBarrierBarrierOperatorParserRuleCall_1_1_0()); }
	ruleBarrierOperator{ after(grammarAccess.getStreamOperatorParameterAccess().getBarrierBarrierOperatorParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ElementJoinOperator__ElementParametersAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementJoinOperatorAccess().getElementParametersStreamAccessParserRuleCall_2_0_0()); }
	ruleStreamAccess{ after(grammarAccess.getElementJoinOperatorAccess().getElementParametersStreamAccessParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ElementJoinOperator__VariableElementParametersAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementJoinOperatorAccess().getVariableElementParametersVariableDefinitionCrossReference_2_1_0()); }
(
{ before(grammarAccess.getElementJoinOperatorAccess().getVariableElementParametersVariableDefinitionIDTerminalRuleCall_2_1_0_1()); }
	RULE_ID{ after(grammarAccess.getElementJoinOperatorAccess().getVariableElementParametersVariableDefinitionIDTerminalRuleCall_2_1_0_1()); }
)
{ after(grammarAccess.getElementJoinOperatorAccess().getVariableElementParametersVariableDefinitionCrossReference_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ElementJoinOperator__ElementParametersAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementJoinOperatorAccess().getElementParametersStreamAccessParserRuleCall_3_1_0()); }
	ruleStreamAccess{ after(grammarAccess.getElementJoinOperatorAccess().getElementParametersStreamAccessParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ElementJoinOperator__VariableElementParametersAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementJoinOperatorAccess().getVariableElementParametersVariableDefinitionCrossReference_4_1_0()); }
(
{ before(grammarAccess.getElementJoinOperatorAccess().getVariableElementParametersVariableDefinitionIDTerminalRuleCall_4_1_0_1()); }
	RULE_ID{ after(grammarAccess.getElementJoinOperatorAccess().getVariableElementParametersVariableDefinitionIDTerminalRuleCall_4_1_0_1()); }
)
{ after(grammarAccess.getElementJoinOperatorAccess().getVariableElementParametersVariableDefinitionCrossReference_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ElementJoinOperator__ParameterAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementJoinOperatorAccess().getParameterStreamOperatorParameterParserRuleCall_6_0()); }
	ruleStreamOperatorParameter{ after(grammarAccess.getElementJoinOperatorAccess().getParameterStreamOperatorParameterParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FilterOperator__ExpressionAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFilterOperatorAccess().getExpressionExpressionParserRuleCall_2_0()); }
	ruleExpression{ after(grammarAccess.getFilterOperatorAccess().getExpressionExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FilterOperator__ExpressionAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFilterOperatorAccess().getExpressionExpressionParserRuleCall_3_1_0()); }
	ruleExpression{ after(grammarAccess.getFilterOperatorAccess().getExpressionExpressionParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FilterOperator__StreamAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFilterOperatorAccess().getStreamStreamOperatorParameterParserRuleCall_5_0()); }
	ruleStreamOperatorParameter{ after(grammarAccess.getFilterOperatorAccess().getStreamStreamOperatorParameterParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SplitOperator__ParameterAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSplitOperatorAccess().getParameterStreamOperatorParameterParserRuleCall_2_0()); }
	ruleStreamOperatorParameter{ after(grammarAccess.getSplitOperatorAccess().getParameterStreamOperatorParameterParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MatchOperator__ExpressionAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMatchOperatorAccess().getExpressionExpressionParserRuleCall_2_0()); }
	ruleExpression{ after(grammarAccess.getMatchOperatorAccess().getExpressionExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MatchOperator__CalculationAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMatchOperatorAccess().getCalculationExpressionParserRuleCall_4_0()); }
	ruleExpression{ after(grammarAccess.getMatchOperatorAccess().getCalculationExpressionParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MatchOperator__StreamAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMatchOperatorAccess().getStreamStreamOperatorParameterParserRuleCall_6_0()); }
	ruleStreamOperatorParameter{ after(grammarAccess.getMatchOperatorAccess().getStreamStreamOperatorParameterParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MatchOperator__StreamAssignment_7_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMatchOperatorAccess().getStreamStreamOperatorParameterParserRuleCall_7_1_0()); }
	ruleStreamOperatorParameter{ after(grammarAccess.getMatchOperatorAccess().getStreamStreamOperatorParameterParserRuleCall_7_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InputOperator__IriAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInputOperatorAccess().getIriSTRINGTerminalRuleCall_2_0()); }
	RULE_STRING{ after(grammarAccess.getInputOperatorAccess().getIriSTRINGTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InputOperator__IriAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInputOperatorAccess().getIriSTRINGTerminalRuleCall_3_1_0()); }
	RULE_STRING{ after(grammarAccess.getInputOperatorAccess().getIriSTRINGTerminalRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InputOperator__AddressAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInputOperatorAccess().getAddressSTRINGTerminalRuleCall_5_0()); }
	RULE_STRING{ after(grammarAccess.getInputOperatorAccess().getAddressSTRINGTerminalRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InputOperator__PortAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInputOperatorAccess().getPortNUMBERTerminalRuleCall_7_0()); }
	RULE_NUMBER{ after(grammarAccess.getInputOperatorAccess().getPortNUMBERTerminalRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TagOperator__ParametersAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTagOperatorAccess().getParametersTagElementParserRuleCall_2_0()); }
	ruleTagElement{ after(grammarAccess.getTagOperatorAccess().getParametersTagElementParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TagOperator__ParametersAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTagOperatorAccess().getParametersTagElementParserRuleCall_3_1_0()); }
	ruleTagElement{ after(grammarAccess.getTagOperatorAccess().getParametersTagElementParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__QueryTagOperator__QueryTypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQueryTagOperatorAccess().getQueryTypeSparqlQueryTypeEnumRuleCall_1_0()); }
	ruleSparqlQueryType{ after(grammarAccess.getQueryTagOperatorAccess().getQueryTypeSparqlQueryTypeEnumRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__QueryTagOperator__QueryAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQueryTagOperatorAccess().getQuerySparqlQueryParserRuleCall_2_0()); }
	ruleSparqlQuery{ after(grammarAccess.getQueryTagOperatorAccess().getQuerySparqlQueryParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SparqlQuery__VariableAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSparqlQueryAccess().getVariableSparqlQueryVariableParserRuleCall_0_0()); }
	ruleSparqlQueryVariable{ after(grammarAccess.getSparqlQueryAccess().getVariableSparqlQueryVariableParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SparqlQueryVariable__VariableAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSparqlQueryVariableAccess().getVariableSTRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getSparqlQueryVariableAccess().getVariableSTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SparqlQueryVariable__VariableAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSparqlQueryVariableAccess().getVariableSTRINGTerminalRuleCall_2_1_0()); }
	RULE_STRING{ after(grammarAccess.getSparqlQueryVariableAccess().getVariableSTRINGTerminalRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnTagOperator__ParametersAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnTagOperatorAccess().getParametersUnTagElementParserRuleCall_2_0()); }
	ruleUnTagElement{ after(grammarAccess.getUnTagOperatorAccess().getParametersUnTagElementParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnTagOperator__ParametersAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnTagOperatorAccess().getParametersUnTagElementParserRuleCall_3_1_0()); }
	ruleUnTagElement{ after(grammarAccess.getUnTagOperatorAccess().getParametersUnTagElementParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnTagOperator__StreamAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnTagOperatorAccess().getStreamStreamOperatorParameterParserRuleCall_5_0()); }
	ruleStreamOperatorParameter{ after(grammarAccess.getUnTagOperatorAccess().getStreamStreamOperatorParameterParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnTagElement__ElementAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnTagElementAccess().getElementOWLClassCrossReference_0_0()); }
(
{ before(grammarAccess.getUnTagElementAccess().getElementOWLClassSTRINGTerminalRuleCall_0_0_1()); }
	RULE_STRING{ after(grammarAccess.getUnTagElementAccess().getElementOWLClassSTRINGTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getUnTagElementAccess().getElementOWLClassCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnTagElement__ReferenceAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnTagElementAccess().getReferenceStreamAccessParserRuleCall_2_0()); }
	ruleStreamAccess{ after(grammarAccess.getUnTagElementAccess().getReferenceStreamAccessParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TagClassElement__ReferenceAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTagClassElementAccess().getReferenceStreamAccessParserRuleCall_0_0()); }
	ruleStreamAccess{ after(grammarAccess.getTagClassElementAccess().getReferenceStreamAccessParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TagClassElement__ElementAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTagClassElementAccess().getElementOWLClassCrossReference_3_0()); }
(
{ before(grammarAccess.getTagClassElementAccess().getElementOWLClassSTRINGTerminalRuleCall_3_0_1()); }
	RULE_STRING{ after(grammarAccess.getTagClassElementAccess().getElementOWLClassSTRINGTerminalRuleCall_3_0_1()); }
)
{ after(grammarAccess.getTagClassElementAccess().getElementOWLClassCrossReference_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TagObjectPropertyElement__ReferenceAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTagObjectPropertyElementAccess().getReferenceStreamAccessParserRuleCall_0_0()); }
	ruleStreamAccess{ after(grammarAccess.getTagObjectPropertyElementAccess().getReferenceStreamAccessParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TagObjectPropertyElement__ElementAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTagObjectPropertyElementAccess().getElementOWLObjectPropertyCrossReference_3_0()); }
(
{ before(grammarAccess.getTagObjectPropertyElementAccess().getElementOWLObjectPropertySTRINGTerminalRuleCall_3_0_1()); }
	RULE_STRING{ after(grammarAccess.getTagObjectPropertyElementAccess().getElementOWLObjectPropertySTRINGTerminalRuleCall_3_0_1()); }
)
{ after(grammarAccess.getTagObjectPropertyElementAccess().getElementOWLObjectPropertyCrossReference_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TagDataTypePropertyElement__ReferenceAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTagDataTypePropertyElementAccess().getReferenceStreamAccessParserRuleCall_0_0()); }
	ruleStreamAccess{ after(grammarAccess.getTagDataTypePropertyElementAccess().getReferenceStreamAccessParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TagDataTypePropertyElement__ElementAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTagDataTypePropertyElementAccess().getElementOWLDatatypePropertyCrossReference_3_0()); }
(
{ before(grammarAccess.getTagDataTypePropertyElementAccess().getElementOWLDatatypePropertySTRINGTerminalRuleCall_3_0_1()); }
	RULE_STRING{ after(grammarAccess.getTagDataTypePropertyElementAccess().getElementOWLDatatypePropertySTRINGTerminalRuleCall_3_0_1()); }
)
{ after(grammarAccess.getTagDataTypePropertyElementAccess().getElementOWLDatatypePropertyCrossReference_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WindowOperator__SettingAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWindowOperatorAccess().getSettingLastKeyword_0_0_0()); }
(
{ before(grammarAccess.getWindowOperatorAccess().getSettingLastKeyword_0_0_0()); }

	'last' 

{ after(grammarAccess.getWindowOperatorAccess().getSettingLastKeyword_0_0_0()); }
)

{ after(grammarAccess.getWindowOperatorAccess().getSettingLastKeyword_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WindowOperator__ValueAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWindowOperatorAccess().getValueNUMBERTerminalRuleCall_0_1_0()); }
	RULE_NUMBER{ after(grammarAccess.getWindowOperatorAccess().getValueNUMBERTerminalRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WindowOperator__UnitAssignment_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWindowOperatorAccess().getUnitAlternatives_0_2_0()); }
(rule__WindowOperator__UnitAlternatives_0_2_0)
{ after(grammarAccess.getWindowOperatorAccess().getUnitAlternatives_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WindowOperator__SettingAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWindowOperatorAccess().getSettingNowKeyword_1_0()); }
(
{ before(grammarAccess.getWindowOperatorAccess().getSettingNowKeyword_1_0()); }

	'now' 

{ after(grammarAccess.getWindowOperatorAccess().getSettingNowKeyword_1_0()); }
)

{ after(grammarAccess.getWindowOperatorAccess().getSettingNowKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MarkerOperator__ExpressionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMarkerOperatorAccess().getExpressionExpressionParserRuleCall_1_0()); }
	ruleExpression{ after(grammarAccess.getMarkerOperatorAccess().getExpressionExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SWRLOperator__RuleAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSWRLOperatorAccess().getRuleSWRLRuleParserRuleCall_2_0()); }
	ruleSWRLRule{ after(grammarAccess.getSWRLOperatorAccess().getRuleSWRLRuleParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SWRLOperator__BarrierAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSWRLOperatorAccess().getBarrierStreamOperatorParameterParserRuleCall_4_0()); }
	ruleStreamOperatorParameter{ after(grammarAccess.getSWRLOperatorAccess().getBarrierStreamOperatorParameterParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SWRLOperator__BarrierAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSWRLOperatorAccess().getBarrierStreamOperatorParameterParserRuleCall_5_1_0()); }
	ruleStreamOperatorParameter{ after(grammarAccess.getSWRLOperatorAccess().getBarrierStreamOperatorParameterParserRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SWRLRule__AntecedentAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSWRLRuleAccess().getAntecedentAntecedentRuleParserRuleCall_2_0()); }
	ruleAntecedentRule{ after(grammarAccess.getSWRLRuleAccess().getAntecedentAntecedentRuleParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SWRLRule__ConsequentAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSWRLRuleAccess().getConsequentConsequentRuleParserRuleCall_4_0()); }
	ruleConsequentRule{ after(grammarAccess.getSWRLRuleAccess().getConsequentConsequentRuleParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AntecedentRule__AtomsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAntecedentRuleAccess().getAtomsRuleParserRuleCall_2_0()); }
	ruleRule{ after(grammarAccess.getAntecedentRuleAccess().getAtomsRuleParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AntecedentRule__AtomsAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAntecedentRuleAccess().getAtomsRuleParserRuleCall_3_1_0()); }
	ruleRule{ after(grammarAccess.getAntecedentRuleAccess().getAtomsRuleParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConsequentRule__AtomsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConsequentRuleAccess().getAtomsRuleParserRuleCall_2_0()); }
	ruleRule{ after(grammarAccess.getConsequentRuleAccess().getAtomsRuleParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConsequentRule__AtomsAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConsequentRuleAccess().getAtomsRuleParserRuleCall_3_1_0()); }
	ruleRule{ after(grammarAccess.getConsequentRuleAccess().getAtomsRuleParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleAccess().getNameOWLObjectPropertyCrossReference_0_0()); }
(
{ before(grammarAccess.getRuleAccess().getNameOWLObjectPropertySTRINGTerminalRuleCall_0_0_1()); }
	RULE_STRING{ after(grammarAccess.getRuleAccess().getNameOWLObjectPropertySTRINGTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getRuleAccess().getNameOWLObjectPropertyCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__VariableAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleAccess().getVariableStreamAccessParserRuleCall_3_0()); }
	ruleStreamAccess{ after(grammarAccess.getRuleAccess().getVariableStreamAccessParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__VariableAssignment_4_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleAccess().getVariableStreamAccessParserRuleCall_4_2_0()); }
	ruleStreamAccess{ after(grammarAccess.getRuleAccess().getVariableStreamAccessParserRuleCall_4_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OCLOperator__ConstraintAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOCLOperatorAccess().getConstraintSTRINGTerminalRuleCall_2_0()); }
	RULE_STRING{ after(grammarAccess.getOCLOperatorAccess().getConstraintSTRINGTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OCLOperator__StreamAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOCLOperatorAccess().getStreamStreamOperatorParameterParserRuleCall_4_0()); }
	ruleStreamOperatorParameter{ after(grammarAccess.getOCLOperatorAccess().getStreamStreamOperatorParameterParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CountOperator__ParameterAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCountOperatorAccess().getParameterStreamAccessParserRuleCall_2_0()); }
	ruleStreamAccess{ after(grammarAccess.getCountOperatorAccess().getParameterStreamAccessParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CountOperator__StreamAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCountOperatorAccess().getStreamStreamOperatorParameterParserRuleCall_4_0()); }
	ruleStreamOperatorParameter{ after(grammarAccess.getCountOperatorAccess().getStreamStreamOperatorParameterParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StandardDeviationOperator__ParameterAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStandardDeviationOperatorAccess().getParameterStreamAccessParserRuleCall_2_0()); }
	ruleStreamAccess{ after(grammarAccess.getStandardDeviationOperatorAccess().getParameterStreamAccessParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StandardDeviationOperator__StreamAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStandardDeviationOperatorAccess().getStreamStreamOperatorParameterParserRuleCall_4_0()); }
	ruleStreamOperatorParameter{ after(grammarAccess.getStandardDeviationOperatorAccess().getStreamStreamOperatorParameterParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AverageOperator__ParameterAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAverageOperatorAccess().getParameterStreamAccessParserRuleCall_2_0()); }
	ruleStreamAccess{ after(grammarAccess.getAverageOperatorAccess().getParameterStreamAccessParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AverageOperator__StreamAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAverageOperatorAccess().getStreamStreamOperatorParameterParserRuleCall_4_0()); }
	ruleStreamOperatorParameter{ after(grammarAccess.getAverageOperatorAccess().getStreamStreamOperatorParameterParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionOperator__ParameterAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionOperatorAccess().getParameterStreamAccessParserRuleCall_2_0()); }
	ruleStreamAccess{ after(grammarAccess.getAdditionOperatorAccess().getParameterStreamAccessParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionOperator__LiteralAssignment_4_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionOperatorAccess().getLiteralNUMBERTerminalRuleCall_4_0_0()); }
	RULE_NUMBER{ after(grammarAccess.getAdditionOperatorAccess().getLiteralNUMBERTerminalRuleCall_4_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionOperator__StreamElementsAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionOperatorAccess().getStreamElementsStreamAccessParserRuleCall_4_1_0()); }
	ruleStreamAccess{ after(grammarAccess.getAdditionOperatorAccess().getStreamElementsStreamAccessParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SubtractionOperator__ParameterAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubtractionOperatorAccess().getParameterStreamAccessParserRuleCall_2_0()); }
	ruleStreamAccess{ after(grammarAccess.getSubtractionOperatorAccess().getParameterStreamAccessParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SubtractionOperator__LiteralAssignment_4_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubtractionOperatorAccess().getLiteralNUMBERTerminalRuleCall_4_0_0()); }
	RULE_NUMBER{ after(grammarAccess.getSubtractionOperatorAccess().getLiteralNUMBERTerminalRuleCall_4_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SubtractionOperator__StreamElementsAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubtractionOperatorAccess().getStreamElementsStreamAccessParserRuleCall_4_1_0()); }
	ruleStreamAccess{ after(grammarAccess.getSubtractionOperatorAccess().getStreamElementsStreamAccessParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicationOperator__ParameterAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicationOperatorAccess().getParameterStreamAccessParserRuleCall_2_0()); }
	ruleStreamAccess{ after(grammarAccess.getMultiplicationOperatorAccess().getParameterStreamAccessParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicationOperator__LiteralAssignment_4_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicationOperatorAccess().getLiteralNUMBERTerminalRuleCall_4_0_0()); }
	RULE_NUMBER{ after(grammarAccess.getMultiplicationOperatorAccess().getLiteralNUMBERTerminalRuleCall_4_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicationOperator__StreamElementsAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicationOperatorAccess().getStreamElementsStreamAccessParserRuleCall_4_1_0()); }
	ruleStreamAccess{ after(grammarAccess.getMultiplicationOperatorAccess().getStreamElementsStreamAccessParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DivisionOperator__ParameterAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDivisionOperatorAccess().getParameterStreamAccessParserRuleCall_2_0()); }
	ruleStreamAccess{ after(grammarAccess.getDivisionOperatorAccess().getParameterStreamAccessParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DivisionOperator__LiteralAssignment_4_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDivisionOperatorAccess().getLiteralNUMBERTerminalRuleCall_4_0_0()); }
	RULE_NUMBER{ after(grammarAccess.getDivisionOperatorAccess().getLiteralNUMBERTerminalRuleCall_4_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DivisionOperator__StreamElementsAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDivisionOperatorAccess().getStreamElementsStreamAccessParserRuleCall_4_1_0()); }
	ruleStreamAccess{ after(grammarAccess.getDivisionOperatorAccess().getStreamElementsStreamAccessParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OutputOperator__StreamAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutputOperatorAccess().getStreamStreamOperatorParameterParserRuleCall_2_0()); }
	ruleStreamOperatorParameter{ after(grammarAccess.getOutputOperatorAccess().getStreamStreamOperatorParameterParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OutputOperator__IriAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutputOperatorAccess().getIriSTRINGTerminalRuleCall_4_0()); }
	RULE_STRING{ after(grammarAccess.getOutputOperatorAccess().getIriSTRINGTerminalRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OutputOperator__IriAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutputOperatorAccess().getIriSTRINGTerminalRuleCall_5_1_0()); }
	RULE_STRING{ after(grammarAccess.getOutputOperatorAccess().getIriSTRINGTerminalRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OutputOperator__AddressAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutputOperatorAccess().getAddressSTRINGTerminalRuleCall_7_0()); }
	RULE_STRING{ after(grammarAccess.getOutputOperatorAccess().getAddressSTRINGTerminalRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OutputOperator__PortAssignment_9
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutputOperatorAccess().getPortNUMBERTerminalRuleCall_9_0()); }
	RULE_NUMBER{ after(grammarAccess.getOutputOperatorAccess().getPortNUMBERTerminalRuleCall_9_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__TypeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getTypeDataTypeParserRuleCall_0_0()); }
	ruleDataType{ after(grammarAccess.getVariableDeclarationAccess().getTypeDataTypeParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getVariableDeclarationAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NumberVariableDefinition__TypeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumberVariableDefinitionAccess().getTypeSimpleDataTypeParserRuleCall_0_0()); }
	ruleSimpleDataType{ after(grammarAccess.getNumberVariableDefinitionAccess().getTypeSimpleDataTypeParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NumberVariableDefinition__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumberVariableDefinitionAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getNumberVariableDefinitionAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NumberVariableDefinition__ValueAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumberVariableDefinitionAccess().getValueNUMBERTerminalRuleCall_3_0()); }
	RULE_NUMBER{ after(grammarAccess.getNumberVariableDefinitionAccess().getValueNUMBERTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StringVariableDefinition__TypeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringVariableDefinitionAccess().getTypeStringDataTypeParserRuleCall_0_0()); }
	ruleStringDataType{ after(grammarAccess.getStringVariableDefinitionAccess().getTypeStringDataTypeParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StringVariableDefinition__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringVariableDefinitionAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getStringVariableDefinitionAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StringVariableDefinition__ValueAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringVariableDefinitionAccess().getValueSTRINGTerminalRuleCall_3_0()); }
	RULE_STRING{ after(grammarAccess.getStringVariableDefinitionAccess().getValueSTRINGTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanVariableDefinition__TypeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanVariableDefinitionAccess().getTypeBooleanDataTypeParserRuleCall_0_0()); }
	ruleBooleanDataType{ after(grammarAccess.getBooleanVariableDefinitionAccess().getTypeBooleanDataTypeParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanVariableDefinition__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanVariableDefinitionAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getBooleanVariableDefinitionAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanVariableDefinition__ValueAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanVariableDefinitionAccess().getValueBOOLVALUETerminalRuleCall_3_0()); }
	RULE_BOOLVALUE{ after(grammarAccess.getBooleanVariableDefinitionAccess().getValueBOOLVALUETerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StructureDeclaration__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructureDeclarationAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getStructureDeclarationAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StructureDeclaration__ElementsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructureDeclarationAccess().getElementsVariableDeclarationParserRuleCall_3_0()); }
	ruleVariableDeclaration{ after(grammarAccess.getStructureDeclarationAccess().getElementsVariableDeclarationParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StreamDeclaration__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStreamDeclarationAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getStreamDeclarationAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StreamDeclaration__ElementsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStreamDeclarationAccess().getElementsStreamElementParserRuleCall_3_0()); }
	ruleStreamElement{ after(grammarAccess.getStreamDeclarationAccess().getElementsStreamElementParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StructureElements__ElementAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructureElementsAccess().getElementStructureDeclarationCrossReference_1_0()); }
(
{ before(grammarAccess.getStructureElementsAccess().getElementStructureDeclarationIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getStructureElementsAccess().getElementStructureDeclarationIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getStructureElementsAccess().getElementStructureDeclarationCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Or__OperatorAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrAccess().getOperatorVerticalLineVerticalLineKeyword_1_1_0()); }
(
{ before(grammarAccess.getOrAccess().getOperatorVerticalLineVerticalLineKeyword_1_1_0()); }

	'||' 

{ after(grammarAccess.getOrAccess().getOperatorVerticalLineVerticalLineKeyword_1_1_0()); }
)

{ after(grammarAccess.getOrAccess().getOperatorVerticalLineVerticalLineKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Or__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrAccess().getRightAndParserRuleCall_1_2_0()); }
	ruleAnd{ after(grammarAccess.getOrAccess().getRightAndParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__And__OperatorAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndAccess().getOperatorAmpersandAmpersandKeyword_1_1_0()); }
(
{ before(grammarAccess.getAndAccess().getOperatorAmpersandAmpersandKeyword_1_1_0()); }

	'&&' 

{ after(grammarAccess.getAndAccess().getOperatorAmpersandAmpersandKeyword_1_1_0()); }
)

{ after(grammarAccess.getAndAccess().getOperatorAmpersandAmpersandKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__And__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndAccess().getRightRelationalExpressionParserRuleCall_1_2_0()); }
	ruleRelationalExpression{ after(grammarAccess.getAndAccess().getRightRelationalExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__OperatorAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExpressionAccess().getOperatorAlternatives_1_1_0()); }
(rule__RelationalExpression__OperatorAlternatives_1_1_0)
{ after(grammarAccess.getRelationalExpressionAccess().getOperatorAlternatives_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExpressionAccess().getRightAdditionParserRuleCall_1_2_0()); }
	ruleAddition{ after(grammarAccess.getRelationalExpressionAccess().getRightAdditionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__RightAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionAccess().getRightMultiplicationParserRuleCall_1_1_0()); }
	ruleMultiplication{ after(grammarAccess.getAdditionAccess().getRightMultiplicationParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__RightAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicationAccess().getRightPrimaryExpressionParserRuleCall_1_1_0()); }
	rulePrimaryExpression{ after(grammarAccess.getMultiplicationAccess().getRightPrimaryExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__ValueAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getValueNUMBERTerminalRuleCall_1_1_0()); }
	RULE_NUMBER{ after(grammarAccess.getPrimaryExpressionAccess().getValueNUMBERTerminalRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__VariableAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getVariableVariableDefinitionCrossReference_2_1_0()); }
(
{ before(grammarAccess.getPrimaryExpressionAccess().getVariableVariableDefinitionIDTerminalRuleCall_2_1_0_1()); }
	RULE_ID{ after(grammarAccess.getPrimaryExpressionAccess().getVariableVariableDefinitionIDTerminalRuleCall_2_1_0_1()); }
)
{ after(grammarAccess.getPrimaryExpressionAccess().getVariableVariableDefinitionCrossReference_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__StreamVariableAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getStreamVariableStreamAccessParserRuleCall_3_1_0()); }
	ruleStreamAccess{ after(grammarAccess.getPrimaryExpressionAccess().getStreamVariableStreamAccessParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_NUMBER : ('0'..'9')* ('.' ('0'..'9')+)?;

RULE_BOOLVALUE : ('true'|'false');

RULE_INT : 'this one has been deactivated';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;


